{"version":3,"file":"default-src_app_views_sso_saml-options_saml-options_module_ts.js","mappings":"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","sources":["./src/app/blocks/services/saml-service.ts","./src/app/views/sso/saml-options/saml-options.component.ts","./src/app/views/sso/saml-options/saml-options.component.html","./src/app/views/sso/saml-options/saml-options.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HydraApiService } from './hydra-api.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { saveAs } from 'file-saver/FileSaver';\r\nimport { CertificateDetails, IDPMetadata, SamlSsoBinding } from 'shared-code-lib';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SAMLService {\r\n  constructor(private hydraApi: HydraApiService, private translate: TranslateService, private toastr: ToastrService) {}\r\n\r\n  parseIDPMetada = (metadaXML: string, fileName: string = ''): Array<IDPMetadata> => {\r\n    const idpEntities = new Array<IDPMetadata>();\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(metadaXML, 'text/xml');\r\n\r\n    const entitiesTag = xmlDoc.querySelectorAll('EntityDescriptor');\r\n    entitiesTag.forEach((entityDescriptor) => {\r\n      const idpTag = entityDescriptor.querySelector('IDPSSODescriptor');\r\n      if (!idpTag) return;\r\n\r\n      const idpMetadata = new IDPMetadata();\r\n\r\n      idpMetadata.entityId = entityDescriptor.attributes['entityID']?.value;\r\n\r\n      let ssoTag = idpTag.querySelector(`SingleSignOnService[Binding=\"${SamlSsoBinding.HttpPost}\"]`);\r\n      if (!ssoTag) ssoTag = idpTag.querySelector(`SingleSignOnService[Binding=\"${SamlSsoBinding.HttpRedirect}\"]`);\r\n      idpMetadata.singleSignOnServiceUrl = ssoTag?.attributes['Location']?.value;\r\n      idpMetadata.singleSignOnServiceBinding = ssoTag?.attributes['Binding']?.value;\r\n      idpMetadata.SingleLogoutService = idpTag.querySelector('SingleLogoutService')?.attributes['Location']?.value;\r\n\r\n      const keysTags = idpTag.querySelectorAll('KeyDescriptor');\r\n      idpMetadata.idpSSOKeys = [];\r\n      for (let i = 0; i < keysTags.length; i++) {\r\n        idpMetadata.idpSSOKeys.push(\r\n          new CertificateDetails({\r\n            fileName: `${fileName}/certficate ${i + 1}`,\r\n            contents: keysTags[i].querySelector('X509Certificate').innerHTML.trim(),\r\n            use: keysTags[i].attributes['use']?.value ?? 'signing',\r\n          })\r\n        );\r\n      }\r\n\r\n      idpEntities.push(idpMetadata);\r\n    });\r\n\r\n    return idpEntities;\r\n  };\r\n\r\n  downloadSPMetadata = (): void => {\r\n    this.hydraApi.getSamlServiceProviderMetadata(\r\n      (file: File) => {\r\n        saveAs(file, 'metadata.xml');\r\n      },\r\n      (err) => {\r\n        this.toastr.error(this.translate.instant('saml-options.download-metadata'));\r\n      }\r\n    );\r\n  };\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport {\r\n  FieldDefinition,\r\n  IFieldOptions,\r\n  FixedDataSource,\r\n  MetaDataType,\r\n  EnumDataSource,\r\n  SamlSsoBinding,\r\n  CertificateDetails,\r\n  IIDPSettings,\r\n  IDPMetadata,\r\n} from 'shared-code-lib';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SAMLService } from '../../../blocks/services/saml-service';\r\nimport { Log } from '../../../blocks/core/log';\r\nimport { NgxSmartModalService } from 'ngx-smart-modal';\r\n\r\n@Component({\r\n  selector: 'app-saml-options',\r\n  templateUrl: './saml-options.component.html',\r\n  styleUrls: ['./saml-options.component.scss'],\r\n})\r\nexport class SAMLOptionsComponent implements OnInit {\r\n  @Input() idpSettings: IIDPSettings;\r\n  certificateFile: File;\r\n\r\n  fieldIdpName: FieldDefinition;\r\n  fieldIdpSsoUrl: FieldDefinition;\r\n  fieldIdpSsoBinding: FieldDefinition;\r\n  keyTypesDataSource: FixedDataSource;\r\n\r\n  MetaDataType = MetaDataType;\r\n\r\n  idpList: Array<IDPMetadata> = [];\r\n  selectedIDPEntityId: string;\r\n  fieldidpMetadata: FieldDefinition;\r\n  fieldCurrentIdpSsoUrl: FieldDefinition;\r\n  fieldCurrentIdpSsoBinding: FieldDefinition;\r\n  idpMetadataDataSource: FixedDataSource = new FixedDataSource();\r\n\r\n  get currentIDP() {\r\n    return this.idpList.find((x) => x.entityId == this.selectedIDPEntityId);\r\n  }\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private toastr: ToastrService,\r\n    private samlService: SAMLService,\r\n    private ngxSmartModalService: NgxSmartModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createFields();\r\n  }\r\n\r\n  createFields = (): void => {\r\n    this.fieldIdpName = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('saml-options.idp.name'),\r\n      placeholder: this.translateService.instant('saml-options.idp.name'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldIdpSsoUrl = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('saml-options.idp.sso-url'),\r\n      placeholder: this.translateService.instant('saml-options.idp.sso-url'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldIdpSsoBinding = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translateService.instant('saml-options.idp.sso-binding'),\r\n      placeholder: this.translateService.instant('saml-options.idp.sso-binding'),\r\n      required: true,\r\n      datasource: new EnumDataSource(SamlSsoBinding, 'SamlSsoBindingEnum', this.translateService),\r\n    });\r\n\r\n    const keyTypesOptions: IFieldOptions[] = [\r\n      { name: this.translateService.instant('saml-options.idp.signing'), value: 'signing' },\r\n      { name: this.translateService.instant('saml-options.idp.encryption'), value: 'encryption' },\r\n    ];\r\n\r\n    this.keyTypesDataSource = new FixedDataSource(keyTypesOptions);\r\n\r\n    this.fieldidpMetadata = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translateService.instant('saml-options.idp.title'),\r\n      placeholder: this.translateService.instant('saml-options.idp.title'),\r\n      required: true,\r\n      datasource: this.idpMetadataDataSource,\r\n    });\r\n\r\n    this.fieldCurrentIdpSsoUrl = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('saml-options.idp.sso-url'),\r\n      placeholder: '',\r\n      required: false,\r\n    });\r\n\r\n    this.fieldCurrentIdpSsoBinding = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translateService.instant('saml-options.idp.sso-binding'),\r\n      placeholder: '',\r\n      required: false,\r\n      datasource: new EnumDataSource(SamlSsoBinding, 'SamlSsoBindingEnum', this.translateService),\r\n    });\r\n  };\r\n\r\n  handleFileSelect(event: any) {\r\n    if (!event.target.files || !event.target.files.length) return;\r\n\r\n    for (const file of event.target.files) {\r\n      if (!file) return;\r\n\r\n      var reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        this.idpSettings.partnerCertificates.push(\r\n          new CertificateDetails({\r\n            contents: event.target.result as string,\r\n            fileName: file.name,\r\n            use: 'signing',\r\n          })\r\n        );\r\n      };\r\n\r\n      reader.onerror = (err: any) => {\r\n        this.toastr.error(this.translateService.instant('saml-options.idp.invalid-certificate'));\r\n        Log.error('SAMLOptionsComponent.handleFileSelect', err);\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  handleIDPMetadataFileSelect(event: any) {\r\n    if (!event.target.files || !event.target.files.length) return;\r\n\r\n    const file = event.target.files[0];\r\n\r\n    var reader = new FileReader();\r\n    const that = this;\r\n    reader.onload = () => {\r\n      this.idpList = this.samlService.parseIDPMetada(reader.result as string, file.name);\r\n\r\n      if (this.idpList.length == 0) {\r\n        this.toastr.warning(this.translateService.instant('saml-options.idp.metadata-no-idp-settings'));\r\n        return;\r\n      }\r\n\r\n      if (this.idpList.length == 1) {\r\n        this.setIDPMetadata(this.idpList[0]);\r\n        return;\r\n      }\r\n\r\n      this.showIDPListDialog();\r\n    };\r\n\r\n    reader.onerror = (err: any) => {\r\n      this.toastr.error(this.translateService.instant('saml-options.idp-metadata-load-fail'));\r\n      Log.error('SAMLOptionsComponent.handleIDPMetadataFileSelect', err);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  setIDPMetadata = (idpMetadata: IDPMetadata): void => {\r\n    this.idpSettings.name = idpMetadata.entityId;\r\n    this.idpSettings.singleSignOnServiceUrl = idpMetadata.singleSignOnServiceUrl;\r\n    this.idpSettings.singleSignOnServiceBinding = idpMetadata.singleSignOnServiceBinding;\r\n    this.idpSettings.partnerCertificates = idpMetadata.idpSSOKeys.map(\r\n      (x) => new CertificateDetails({ fileName: x.fileName, contents: x.string, use: x.use })\r\n    );\r\n  };\r\n\r\n  selectCurrentIDPMetadata = (): void => {\r\n    this.setIDPMetadata(this.currentIDP);\r\n    this.ngxSmartModalService.close('idpList');\r\n  };\r\n\r\n  showIDPListDialog = (): void => {\r\n    this.selectedIDPEntityId = '';\r\n\r\n    const options: IFieldOptions[] = [];\r\n    for (let idp of this.idpList) {\r\n      options.push({ name: idp.entityId, value: idp.entityId });\r\n    }\r\n\r\n    this.idpMetadataDataSource.updateOptions(options);\r\n\r\n    this.ngxSmartModalService.open('idpList');\r\n  };\r\n\r\n  downloadServiceProviderMetadata = (event): void => {\r\n    event.preventDefault();\r\n    this.samlService.downloadSPMetadata();\r\n  };\r\n\r\n  deleteCertificate = (index: number) => this.idpSettings.partnerCertificates.splice(index, 1);\r\n\r\n  deleteAllCertificates = () => (this.idpSettings.partnerCertificates = []);\r\n\r\n  createField = (type: MetaDataType = MetaDataType.Text, datasource: FixedDataSource = null) => {\r\n    return new FieldDefinition({\r\n      type: type,\r\n      label: '',\r\n      placeholder:  '',\r\n      required: true,\r\n      datasource: datasource,\r\n      hideLabel: true,\r\n    });\r\n  };\r\n}\r\n","<div class=\"row p-0 m-0\">\r\n  <div class=\"col-6 p-0 col\">\r\n    <div class=\"col p-0\">\r\n      <app-field [field]=\"fieldIdpName\" [(value)]=\"idpSettings.name\"></app-field>\r\n    </div>\r\n\r\n    <div class=\"col p-0\">\r\n      <app-field [field]=\"fieldIdpSsoUrl\" [(value)]=\"idpSettings.singleSignOnServiceUrl\"></app-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"col p-0 col-6\">\r\n    <input\r\n      type=\"file\"\r\n      style=\"display: none\"\r\n      #idpMetadataInput\r\n      name=\"idpMetadataInput\"\r\n      accept=\".xml\"\r\n      (change)=\"handleIDPMetadataFileSelect($event)\"\r\n      id=\"modal-btn-chose-file\"\r\n    />\r\n    <button class=\"btn btn-secondary btn-idp-metadata ml-4\" (click)=\"idpMetadataInput.click()\">\r\n      {{ 'saml-options.import-idp-metadata' | translate }}\r\n    </button>\r\n    <div class=\"ml-3 idp-sso-binding-wrapper\">\r\n      <app-field [field]=\"fieldIdpSsoBinding\" [(value)]=\"idpSettings.singleSignOnServiceBinding\"></app-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"col p-0 certificate-field\">\r\n    <div class=\"mt-2 mb-1 d-flex\">\r\n      <app-label\r\n        class=\"certificate-file-label flex-grow-1\"\r\n        [localize]=\"true\"\r\n        [required]=\"true\"\r\n        [text]=\"'saml-options.idp.certificates'\"\r\n      ></app-label>\r\n      <input\r\n        type=\"file\"\r\n        style=\"display: none\"\r\n        #certificateInput\r\n        name=\"certificateFile\"\r\n        accept=\".cer,.cert, .pfx, .pem\"\r\n        (change)=\"handleFileSelect($event)\"\r\n        id=\"modal-btn-chose-file\"\r\n        multiple=\"true\"\r\n      />\r\n      <button class=\"btn btn-primary\" (click)=\"certificateInput.click()\">\r\n        {{ 'Common.Add' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <table class=\"table mt-0 pl-1 certificates-table\">\r\n    <thead>\r\n      <tr>\r\n        <th width=\"31%\" class=\"table__th-content pl-0\">\r\n          <div class=\"ml-3\">{{ 'saml-options.idp.certificate-filename' | translate }}</div>\r\n        </th>\r\n        <th width=\"31%\" class=\"table__th-content pl-0\">\r\n          <div class=\"ml-3\">{{ 'saml-options.idp.certificate-content' | translate }}</div>\r\n        </th>\r\n        <th width=\"30%\" class=\"table__th-content pl-0\">\r\n          <div class=\"ml-3\">{{ 'saml-options.idp.certificate-use' | translate }}</div>\r\n        </th>\r\n        <th class=\"table__th-control action-th delete-all\">\r\n          <div class=\"text-center pb-2\">\r\n            <i\r\n              style=\"cursor: pointer\"\r\n              class=\"icomoon-delete status\"\r\n              (click)=\"deleteAllCertificates()\"\r\n              [title]=\"'saml-options.idp.certificate-delete-all' | translate\"\r\n            ></i>\r\n          </div>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody class=\"table__body ps col p-0\" fxFlex=\"auto\" [perfectScrollbar]=\"{ suppressScrollY: false }\">\r\n      <tr class=\"table__table-row\" *ngFor=\"let item of this.idpSettings.partnerCertificates; let i = index\">\r\n        <td width=\"31%\" class=\"table__cell\" style=\"cursor: default !important\">\r\n          <app-field [field]=\"createField()\" [(value)]=\"item.fileName\" [disabled]=\"true\"></app-field>\r\n        </td>\r\n        <td width=\"31%\" class=\"table__cell\" style=\"cursor: default !important\">\r\n          <app-field [field]=\"createField()\" [(value)]=\"item.contents\" [disabled]=\"true\"></app-field>\r\n        </td>\r\n        <td width=\"30%\" class=\"table__cell\" style=\"cursor: default !important\">\r\n          <div class=\"table__cell-content\">\r\n            <app-field [field]=\"createField(MetaDataType.List, keyTypesDataSource)\" [(value)]=\"item.use\"></app-field>\r\n          </div>\r\n        </td>\r\n        <td\r\n          class=\"table__control-cell p-1 d-flex h-100 align-items-center justify-content-center\"\r\n          style=\"cursor: default !important\"\r\n        >\r\n          <div class=\"delete-certificate\">\r\n            <i\r\n              style=\"cursor: pointer\"\r\n              class=\"icomoon-delete status\"\r\n              (click)=\"deleteCertificate(i)\"\r\n              [title]=\"'Metadata-Form.item-delete' | translate\"\r\n              id=\"certificates-delete-{{ i }}\"\r\n            ></i>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<div class=\"col p-0 mt-3 pt-1 hint\">\r\n  <div>\r\n    <a href=\"#\" (click)=\"downloadServiceProviderMetadata($event)\">\r\n      {{ 'saml-options.download-metadata' | translate }}</a\r\n    >\r\n  </div>\r\n  <div>\r\n    <a href=\"/api/saml/DownloadCertificate\" target=\"_self\"> {{ 'saml-options.download-certificate' | translate }}</a>\r\n  </div>\r\n</div>\r\n\r\n<ngx-smart-modal #idpList [closable]=\"true\" [escapable]=\"true\" [dismissable]=\"true\" identifier=\"idpList\">\r\n  <app-modal-header [title]=\"'saml-options.idp.select-idp-to-import' | translate\"></app-modal-header>\r\n\r\n  <div class=\"idp-list\">\r\n    <app-field [field]=\"fieldidpMetadata\" [(value)]=\"selectedIDPEntityId\"></app-field>\r\n    <app-field\r\n      [field]=\"fieldCurrentIdpSsoUrl\"\r\n      [value]=\"currentIDP?.singleSignOnServiceUrl\"\r\n      [disabled]=\"true\"\r\n    ></app-field>\r\n    <app-field\r\n      [field]=\"fieldCurrentIdpSsoBinding\"\r\n      [value]=\"currentIDP?.singleSignOnServiceBinding\"\r\n      [disabled]=\"true\"\r\n    ></app-field>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-minwidth btn-light\" (click)=\"idpList.close()\">\r\n      {{ 'Common.Cancel' | translate }}\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-minwidth btn-primary\"\r\n      (click)=\"selectCurrentIDPMetadata()\"\r\n      [disabled]=\"!selectedIDPEntityId\"\r\n    >\r\n      {{ 'Common.ok' | translate }}\r\n    </button>\r\n  </div>\r\n</ngx-smart-modal>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SAMLOptionsComponent } from './saml-options.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar-portable';\r\nimport { FieldsModule, LabelModule, ModalHeaderModule } from 'shared-code-lib';\r\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\r\n\r\n@NgModule({\r\n  declarations: [SAMLOptionsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    NgxFileDropModule,\r\n    FormsModule,\r\n    FieldsModule,\r\n    PerfectScrollbarModule,\r\n    NgxSmartModalModule,\r\n    ModalHeaderModule,\r\n    LabelModule,\r\n  ],\r\n  exports: [SAMLOptionsComponent],\r\n})\r\nexport class SAMLOptionsModule {}\r\n"],"names":["HydraApiService","TranslateService","ToastrService","saveAs","CertificateDetails","IDPMetadata","SamlSsoBinding","SAMLService","constructor","hydraApi","translate","toastr","parseIDPMetada","metadaXML","fileName","idpEntities","Array","parser","DOMParser","xmlDoc","parseFromString","entitiesTag","querySelectorAll","forEach","entityDescriptor","idpTag","querySelector","idpMetadata","entityId","attributes","value","ssoTag","HttpPost","HttpRedirect","singleSignOnServiceUrl","singleSignOnServiceBinding","SingleLogoutService","keysTags","idpSSOKeys","i","length","push","contents","innerHTML","trim","use","downloadSPMetadata","getSamlServiceProviderMetadata","file","err","error","instant","i0","ɵɵinject","i1","i2","i3","factory","ɵfac","providedIn","FieldDefinition","FixedDataSource","MetaDataType","EnumDataSource","Log","NgxSmartModalService","ɵɵelementStart","ɵɵtwoWayListener","SAMLOptionsComponent_tr_42_Template_app_field_valueChange_2_listener","$event","item_r5","ɵɵrestoreView","_r4","$implicit","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵelementEnd","SAMLOptionsComponent_tr_42_Template_app_field_valueChange_4_listener","SAMLOptionsComponent_tr_42_Template_app_field_valueChange_7_listener","ɵɵlistener","SAMLOptionsComponent_tr_42_Template_i_click_10_listener","i_r6","index","ctx_r6","ɵɵnextContext","deleteCertificate","ɵɵadvance","ɵɵproperty","createField","ɵɵtwoWayProperty","List","keyTypesDataSource","ɵɵpropertyInterpolate1","ɵɵpipeBind1","SAMLOptionsComponent","currentIDP","idpList","find","x","selectedIDPEntityId","translateService","samlService","ngxSmartModalService","idpMetadataDataSource","createFields","fieldIdpName","type","Text","label","placeholder","required","fieldIdpSsoUrl","fieldIdpSsoBinding","datasource","keyTypesOptions","name","fieldidpMetadata","fieldCurrentIdpSsoUrl","fieldCurrentIdpSsoBinding","setIDPMetadata","idpSettings","partnerCertificates","map","string","selectCurrentIDPMetadata","close","showIDPListDialog","options","idp","updateOptions","open","downloadServiceProviderMetadata","event","preventDefault","splice","deleteAllCertificates","hideLabel","ngOnInit","handleFileSelect","target","files","reader","FileReader","onload","result","onerror","readAsText","handleIDPMetadataFileSelect","that","warning","ɵɵdirectiveInject","i4","selectors","inputs","decls","vars","consts","template","SAMLOptionsComponent_Template","rf","ctx","SAMLOptionsComponent_Template_app_field_valueChange_3_listener","_r1","SAMLOptionsComponent_Template_app_field_valueChange_5_listener","SAMLOptionsComponent_Template_input_change_7_listener","SAMLOptionsComponent_Template_button_click_9_listener","idpMetadataInput_r2","ɵɵreference","click","ɵɵtext","SAMLOptionsComponent_Template_app_field_valueChange_13_listener","ɵɵelement","SAMLOptionsComponent_Template_input_change_17_listener","SAMLOptionsComponent_Template_button_click_19_listener","certificateInput_r3","SAMLOptionsComponent_Template_i_click_39_listener","ɵɵtemplate","SAMLOptionsComponent_tr_42_Template","SAMLOptionsComponent_Template_a_click_45_listener","SAMLOptionsComponent_Template_app_field_valueChange_57_listener","SAMLOptionsComponent_Template_button_click_61_listener","idpList_r8","SAMLOptionsComponent_Template_button_click_64_listener","ɵɵtextInterpolate1","ɵɵtextInterpolate","ɵɵpureFunction0","_c0","CommonModule","NgxFileDropModule","TranslateModule","FormsModule","PerfectScrollbarModule","FieldsModule","LabelModule","ModalHeaderModule","NgxSmartModalModule","SAMLOptionsModule","declarations","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}