{"version":3,"file":"src_app_views_admin-user_admin-user_module_ts.js","mappings":"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","sources":["./src/app/views/admin-user/admin-user-routing.module.ts","./src/app/views/admin-user/admin-user.component.ts","./src/app/views/admin-user/admin-user.component.html","./src/app/views/admin-user/admin-user.module.ts","./src/app/views/admin-user/properties-document-limits/properties-document-limits.component.ts","./src/app/views/admin-user/properties-document-limits/properties-document-limits.component.html","./src/app/views/admin-user/properties-form/properties-form.component.ts","./src/app/views/admin-user/properties-form/properties-form.component.html","./src/app/views/admin-user/properties-roles/properties-roles.component.ts","./src/app/views/admin-user/properties-roles/properties-roles.component.html","./src/app/views/admin-user/properties-tenants/properties-tenants.component.ts","./src/app/views/admin-user/properties-tenants/properties-tenants.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminUserComponent } from './admin-user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'create',\r\n    component: AdminUserComponent,\r\n    data: { type: 'create' },\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'duplicate/:userid',\r\n    component: AdminUserComponent,\r\n    data: { type: 'duplicate' },\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: ':userid',\r\n    component: AdminUserComponent,\r\n    data: { type: 'properties' },\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminUserRoutingModule {}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { ActivatedRoute, Data, Params, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiResult, Control, CreateUser, LoginTypes, UpdateUser, User, UserTypes } from '../../blocks/services/models';\r\n\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { EnumDataSource, FieldDefinition, MetaDataType, TenantAuthenticationType } from 'shared-code-lib';\r\nimport { ErrorsService } from '../../blocks/services/errors.service';\r\nimport { HydraApiService } from '../../blocks/services/hydra-api.service';\r\nimport { SpinnerStateService } from '../../blocks/services/spinner-state.service';\r\nimport { UserStateService } from '../../blocks/services/user-state.service';\r\n\r\n@Component({\r\n  templateUrl: './admin-user.component.html',\r\n  styleUrls: ['./admin-user.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminUserComponent implements OnInit, OnDestroy {\r\n  saveButton: Control;\r\n  cancelButton: Control;\r\n  formControls: Array<Control> = [];\r\n  fieldName: FieldDefinition;\r\n  fieldEmail: FieldDefinition;\r\n  fieldPassword: FieldDefinition;\r\n  fieldLoginType: FieldDefinition;\r\n\r\n  user: User;\r\n  sendWelcomeMessage: boolean = true;\r\n  password: string = '';\r\n  subTenantIds: string[] = null;\r\n\r\n  isPartnerUser: boolean;\r\n\r\n  routeParams: Params;\r\n  routeData: Data;\r\n\r\n  loginTypes = LoginTypes;\r\n  authenticationTypes = TenantAuthenticationType;\r\n\r\n  tenantAuthenticationType: TenantAuthenticationType;\r\n\r\n  get userLoginType() {\r\n    return `${this.user.loginType}`;\r\n  }\r\n  set userLoginType(val: string) {\r\n    this.user.loginType = Number(val);\r\n  }\r\n\r\n  subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private userState: UserStateService,\r\n    private router: Router,\r\n    private hydraApi: HydraApiService,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private errorsService: ErrorsService,\r\n    private spinner: SpinnerStateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createButtons();\r\n    this.createFields();\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.route.params, this.route.data]).subscribe(([params, data]) => {\r\n        this.routeParams = params;\r\n        this.routeData = data;\r\n\r\n        if (this.routeData.type == 'properties' || this.routeData.type == 'duplicate') {\r\n          this.hydraApi.getUser(this.routeParams.userid, this.userLoaded, this.userLoadFailed);\r\n        } else if (this.routeData.type == 'create') {\r\n          this.user = new User();\r\n          this.userLoaded(this.user);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.tenantAuthenticationType = this.userState.userProfile.tenantOptions.authenticationType;\r\n  }\r\n\r\n  private userLoaded = (u: User) => {\r\n    if (this.routeData.type == 'duplicate') {\r\n      u.name = `${this.translate.instant('Admin.CopyOf')} ${u.name}`;\r\n      u.id = '';\r\n    } else if (this.routeData.type == 'create') {\r\n      u.id = '';\r\n    }\r\n\r\n    this.user = u;\r\n    this.isPartnerUser = u.userType == UserTypes.Partner;\r\n  };\r\n\r\n  private userLoadFailed = () => {\r\n    this.toastr.error(this.translate.instant('admin-user.user-load-failed'));\r\n    this.spinner.hide();\r\n  };\r\n\r\n  onSave = () => {\r\n    if (this.user.id) {\r\n      this.hydraApi.updateUser(\r\n        new UpdateUser(this.user, this.password, this.subTenantIds),\r\n        this.userSaved,\r\n        this.userSaveFailed\r\n      );\r\n    } else {\r\n      this.hydraApi.createUser(\r\n        new CreateUser(this.user, this.sendWelcomeMessage, this.password, this.subTenantIds),\r\n        this.userSaved,\r\n        this.userSaveFailed\r\n      );\r\n    }\r\n\r\n    this.spinner.showSavingSpinner();\r\n  };\r\n\r\n  userSaved = (result: ApiResult) => {\r\n    if (result.success) {\r\n      this.toastr.success(this.translate.instant('admin-user.user-saved'));\r\n      this.returnToGrid();\r\n\r\n      if (this.userState.user.id === result.object.id) {\r\n        result.object.products = this.userState.user.products;\r\n        this.userState.userChanged.next(result.object);\r\n      }\r\n    } else {\r\n      this.errorsService.showErrorsModal(result.errors, 'admin-user.validation-errors');\r\n    }\r\n\r\n    this.spinner.hide();\r\n  };\r\n\r\n  userSaveFailed = (err: any) => {\r\n    this.toastr.error(this.translate.instant('admin-user.user-save-failed'));\r\n    this.spinner.hide();\r\n  };\r\n\r\n  onCancel = () => {\r\n    this.returnToGrid();\r\n  };\r\n\r\n  returnToGrid = () => {\r\n    this.router.navigateByUrl(\r\n      'settings/BambaSettingsApplication/BambaSettingsApplication-Upland.Bamba.Application.Settings.Users'\r\n    ); // todo - handle this \"better\"\r\n  };\r\n\r\n  private createFields = () => {\r\n    this.fieldName = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translate.instant('admin-user.name'),\r\n      placeholder: this.translate.instant('admin-user.name-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldEmail = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translate.instant('admin-user.email'),\r\n      placeholder: this.translate.instant('admin-user.email-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldPassword = new FieldDefinition({\r\n      type: MetaDataType.Password,\r\n      label: this.translate.instant('admin-user.password'),\r\n      placeholder: this.translate.instant('admin-user.password-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldLoginType = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translate.instant('admin-user.login-type'),\r\n      datasource: new EnumDataSource(LoginTypes, 'LoginTypeEnum', this.translate),\r\n      required: true,\r\n    });\r\n  };\r\n\r\n  private createButtons() {\r\n    this.saveButton = new Control(\r\n      this.onSave,\r\n      this.translate.instant('admin-user.save'),\r\n      'btn btn-primary btn-minwidth',\r\n      '',\r\n      '',\r\n      'btn',\r\n      false\r\n    );\r\n    this.cancelButton = new Control(\r\n      this.onCancel,\r\n      this.translate.instant('admin-user.cancel'),\r\n      'btn btn-light btn-minwidth',\r\n      '',\r\n      '',\r\n      'btn',\r\n      false\r\n    );\r\n\r\n    this.formControls.push(this.saveButton);\r\n    this.formControls.push(this.cancelButton);\r\n  }\r\n\r\n  tenantIdsChanged(tenantIds: string[]) {\r\n    this.subTenantIds = tenantIds;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"user\" class=\"admin-user d-flex flex-column\" appAutoFocusFirstInput [focusDelay]=\"1000\">\r\n  <app-secondary-header [headerText]=\"'admin-user.HeadText' | translate\" [rightControls]=\"formControls\">\r\n  </app-secondary-header>\r\n  <div class=\"container-fluid col min-h-fit-content\">\r\n    <div class=\"row panel min-h-fit-content h-100 m-0\" id=\"spinnerPanel\">\r\n      <div class=\"col-12 col-md-3 properties-panel\">\r\n        <app-created-modified\r\n          [id]=\"user.id\"\r\n          [createdDate]=\"user.dateCreatedUTC\"\r\n          [modifiedDate]=\"user.dateModifiedUTC\"\r\n        ></app-created-modified>\r\n\r\n        <div class=\"col p-0\">\r\n          <app-field [field]=\"fieldName\" [(value)]=\"user.name\" [disabled]=\"isPartnerUser\"></app-field>\r\n        </div>\r\n\r\n        <div class=\"col p-0\">\r\n          <app-field [field]=\"fieldEmail\" [(value)]=\"user.email\" [disabled]=\"isPartnerUser\"></app-field>\r\n        </div>\r\n\r\n        <div class=\"col p-0\">\r\n          <app-field [field]=\"fieldLoginType\" [(value)]=\"userLoginType\"></app-field>\r\n        </div>\r\n\r\n        <div\r\n          *ngIf=\"\r\n            !isPartnerUser &&\r\n            (user.loginType === loginTypes.ApplicationBased ||\r\n              (user.loginType === loginTypes.UseTenantSettings &&\r\n                tenantAuthenticationType === authenticationTypes.ApplicationBased))\r\n          \"\r\n          class=\"col p-0\"\r\n        >\r\n          <app-field [field]=\"fieldPassword\" [(value)]=\"password\"></app-field>\r\n          <app-label *ngIf=\"this.user.id\" [localize]=\"true\" [text]=\"'admin-user.leave-password-blank-note'\"></app-label>\r\n        </div>\r\n\r\n        <div *ngIf=\"!this.user.id\" class=\"col p-0\">\r\n          <app-checkbox\r\n            name=\"checkbox-user-send-welcome-message\"\r\n            [(value)]=\"sendWelcomeMessage\"\r\n            label=\"admin-user.send-welcome-message\"\r\n          ></app-checkbox>\r\n        </div>\r\n\r\n        <div *ngIf=\"!isPartnerUser\" class=\"col p-0\">\r\n          <app-checkbox\r\n            name=\"checkbox-user-locked\"\r\n            [value]=\"!user.locked\"\r\n            (valueChange)=\"user.locked = !user.locked\"\r\n            label=\"admin-user.allowed-to-login\"\r\n          ></app-checkbox>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-9 p-0 step-panel d-flex flex-column\">\r\n        <div class=\"step-panel-wrapper vcenter\">\r\n          <div class=\"col step-panel-header\">\r\n            {{ 'admin-user.properties' | translate }}\r\n          </div>\r\n        </div>\r\n\r\n        <app-properties-form\r\n          class=\"d-flex flex-column col p-0\"\r\n          [user]=\"user\"\r\n          (tenantIdsChange)=\"tenantIdsChanged($event)\"\r\n        ></app-properties-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminUserRoutingModule } from './admin-user-routing.module';\r\nimport { AdminUserComponent } from './admin-user.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PageModule } from './../../blocks/page/page.module';\r\nimport { ComponentsModule } from './../../blocks/components/components.module';\r\nimport { PropertiesFormComponent } from './properties-form/properties-form.component';\r\nimport { PropertiesRolesComponent } from './properties-roles/properties-roles.component';\r\nimport { PropertiesTenantsComponent } from './properties-tenants/properties-tenants.component';\r\nimport { AutoFocusFirstInputModule, LabelModule, CheckboxModule, TabBarModule, FieldsModule } from 'shared-code-lib';\r\nimport {PropertiesDocumentLimitsComponent} from './properties-document-limits/properties-document-limits.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminUserComponent,\r\n    PropertiesFormComponent,\r\n    PropertiesRolesComponent,\r\n    PropertiesTenantsComponent,\r\n    PropertiesDocumentLimitsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminUserRoutingModule,\r\n    TranslateModule,\r\n    PageModule,\r\n    ComponentsModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    LabelModule,\r\n    CheckboxModule,\r\n    TabBarModule,\r\n  ],\r\n})\r\nexport class AdminUserModule {}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FieldDefinition, MetaDataType } from 'shared-code-lib';\r\nimport { IUserDocumentLimits } from '../../../blocks/services/models';\r\n\r\n@Component({\r\n  selector: 'app-properties-document-limits',\r\n  templateUrl: './properties-document-limits.component.html',\r\n  styleUrls: ['./properties-document-limits.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PropertiesDocumentLimitsComponent implements OnInit {\r\n  @Input() documentLimits: IUserDocumentLimits;\r\n  @Output() fieldChanged = new EventEmitter<boolean>();\r\n\r\n  fieldType: FieldDefinition;\r\n  perMonth: FieldDefinition;\r\n  perDocument: FieldDefinition;\r\n\r\n  get monthlyPageLimit() {\r\n    return `${this.documentLimits.monthlyPageLimit}`;\r\n  }\r\n  set monthlyPageLimit(val: string) {\r\n    this.documentLimits.monthlyPageLimit = Number(val);\r\n  }\r\n  get documentPageLimit() {\r\n    return `${this.documentLimits.documentPageLimit}`;\r\n  }\r\n  set documentPageLimit(val: string) {\r\n    this.documentLimits.documentPageLimit = Number(val);\r\n  }\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.createFields();\r\n  }\r\n\r\n  createFields = (): void => {\r\n    this.perMonth = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-user.document-limits.total-per-month'),\r\n      placeholder: this.translateService.instant('admin-user.document-limits.total-per-month-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.perDocument = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-user.document-limits.total-per-document'),\r\n      placeholder: this.translateService.instant('admin-user.document-limits.total-per-document-placeholder'),\r\n      required: true,\r\n    });\r\n  };\r\n}\r\n","<div>\r\n  <div class=\"col p-0\">\r\n    <div class=\"input-cont\">\r\n      <app-checkbox\r\n        [(value)]=\"documentLimits.overrideTenantLimits\"\r\n        [label]=\"'admin-user.document-limits.overrideTenantLimits' | translate\"\r\n      ></app-checkbox>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"perMonth\"\r\n      [(value)]=\"monthlyPageLimit\"\r\n      [disabled]=\"!documentLimits.overrideTenantLimits\"\r\n    ></app-field>\r\n  </div>\r\n\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"perDocument\"\r\n      [(value)]=\"documentPageLimit\"\r\n      [disabled]=\"!documentLimits.overrideTenantLimits\"\r\n    ></app-field>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Feature, Tab } from 'shared-code-lib';\r\nimport { TenantType } from '../../../blocks/models/user-profile';\r\nimport { User } from '../../../blocks/services/models';\r\nimport { UserStateService } from '../../../blocks/services/user-state.service';\r\n\r\n@Component({\r\n  selector: 'app-properties-form',\r\n  templateUrl: './properties-form.component.html',\r\n  styleUrls: ['./properties-form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PropertiesFormComponent implements OnInit {\r\n  @Input() user: User;\r\n  @Output() tenantIdsChange = new EventEmitter<Array<string>>();\r\n\r\n  activeTab = 'roles';\r\n  tabs = new Array<Tab>();\r\n\r\n  constructor(private translateService: TranslateService, private userStateService: UserStateService) {}\r\n\r\n  ngOnInit() {\r\n    this.tabs.push(new Tab('roles', this.translateService.instant('admin-user.roles')));\r\n\r\n    if (this.userStateService.userProfile.tenantOptions.tenantType == TenantType.Partner) {\r\n      this.tabs.push(new Tab('tenants', this.translateService.instant('admin-user.tenants')));\r\n    }\r\n\r\n    if (this.userStateService.hasFeature(Feature.Capture)) {\r\n      this.tabs.push(new Tab('document-limits', this.translateService.instant('admin-user.document-limits.title')));\r\n    }\r\n  }\r\n\r\n  activateTab = (view) => {\r\n    this.activeTab = view;\r\n  };\r\n\r\n  tenantIdsChanged(tenantIds: string[]) {\r\n    this.tenantIdsChange.emit(tenantIds);\r\n  }\r\n}\r\n","<div class=\"admin-user-properties\">\r\n  <app-tab-bar [tabs]=\"tabs\" (tabSelected)=\"activateTab($event)\"></app-tab-bar>\r\n</div>\r\n\r\n<div class=\"tab-content content-padding h-100\">\r\n  <div class=\"h-100\" *ngIf=\"'roles' == activeTab\">\r\n    <app-properties-roles class=\"h-100\" [user]=\"user\"></app-properties-roles>\r\n  </div>\r\n\r\n  <div class=\"h-100\" *ngIf=\"'tenants' == activeTab\">\r\n    <app-properties-tenants\r\n      class=\"h-100\"\r\n      [user]=\"user\"\r\n      (tenantIdsChange)=\"tenantIdsChanged($event)\"\r\n    ></app-properties-tenants>\r\n  </div>\r\n  <div class=\"h-100\" *ngIf=\"'document-limits' == activeTab\">\r\n    <app-properties-document-limits\r\n      class=\"h-100\"\r\n      [documentLimits]=\"user.userDocumentLimits\"\r\n    ></app-properties-document-limits>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport { User } from '../../../blocks/services/models';\r\nimport { HydraApiService } from '../../../blocks/services/hydra-api.service';\r\nimport { Role } from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-properties-roles',\r\n  templateUrl: './properties-roles.component.html',\r\n  styleUrls: ['./properties-roles.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PropertiesRolesComponent implements OnInit {\r\n  @Input() user: User;\r\n  @Output() roleIdsChange = new EventEmitter<Array<string>>();\r\n\r\n  available: Array<Role> = [];\r\n  current: Array<Role> = [];\r\n\r\n  constructor(private hydraApi: HydraApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadPicklistItems();\r\n  }\r\n\r\n  currentChanged = (items: Array<Role>) => {\r\n    this.user.roleIds = [];\r\n    for (let item of items) {\r\n      this.user.roleIds.push(item.id);\r\n    }\r\n\r\n    this.roleIdsChange.emit(this.user.roleIds);\r\n  };\r\n\r\n  loadPicklistItems = () => {\r\n    this.hydraApi.getRoles(this.loaded, this.loadFailed);\r\n  };\r\n\r\n  loaded = (roles: Array<Role>) => {\r\n    this.available = roles;\r\n    this.current = roles.filter((r) => !!this.user.roleIds.find((ri) => ri == r.id));\r\n  };\r\n\r\n  loadFailed = () => {};\r\n}\r\n","<app-dual-picklist\r\n  class=\"max-height\"\r\n  [available]=\"available\"\r\n  [current]=\"current\"\r\n  (currentChange)=\"currentChanged($event)\"\r\n  [displayField]=\"'name'\"\r\n  [listName]=\"'step-interactive.roles' | translate\"\r\n></app-dual-picklist>\r\n","import { Component, OnInit, ViewEncapsulation, Output, EventEmitter, Input } from '@angular/core';\r\nimport { HydraApiService } from '../../../blocks/services/hydra-api.service';\r\nimport { User } from '../../../blocks/services/models';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Tenant } from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-properties-tenants',\r\n  templateUrl: './properties-tenants.component.html',\r\n  styleUrls: ['./properties-tenants.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PropertiesTenantsComponent implements OnInit {\r\n  @Input() user: User;\r\n  @Output() tenantIdsChange = new EventEmitter<Array<string>>();\r\n\r\n  available: Array<Tenant> = [];\r\n  current: Array<Tenant> = [];\r\n  availableSubTenants: Array<Tenant> = [];\r\n\r\n  constructor(private hydraApi: HydraApiService, private toastr: ToastrService, private translate: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadAvailableSubTenantsForUser();\r\n  }\r\n\r\n  loadAvailableSubTenantsForUser = () => {\r\n    this.hydraApi.getAvailableSubTenantsForUser(this.user.id, this.loadedAvailableSubTenants, this.loadFailed);\r\n  };\r\n\r\n  loadedAvailableSubTenants = (availableSubTenants: Array<Tenant>) => {\r\n    this.availableSubTenants = availableSubTenants;\r\n\r\n    if (this.user.id) {\r\n      this.loadUserSubTenants();\r\n    } else {\r\n      this.setAvailableAndCurrent();\r\n    }\r\n  };\r\n\r\n  loadUserSubTenants = () => {\r\n    this.hydraApi.getUserSubTenants(this.user.id, this.loadedUserSubTenants, this.loadFailed);\r\n  };\r\n\r\n  loadedUserSubTenants = (subTenants: Array<Tenant>) => {\r\n    const subTenantIds = subTenants.map((t) => t.id);\r\n    this.tenantIdsChange.emit(subTenantIds);\r\n\r\n    this.setAvailableAndCurrent(subTenantIds);\r\n  };\r\n\r\n  setAvailableAndCurrent(subTenantIds: Array<string> = []) {\r\n    this.available = this.availableSubTenants;\r\n    this.current = this.available.filter((t) => subTenantIds.includes(t.id));\r\n  }\r\n\r\n  loadFailed = () => {\r\n    this.toastr.error(this.translate.instant('admin-user.tenantsLoadFailed'));\r\n  };\r\n\r\n  currentChanged = (items: Array<Tenant>) => {\r\n    const tenantIds = [];\r\n    for (let item of items) {\r\n      tenantIds.push(item.id);\r\n    }\r\n\r\n    this.tenantIdsChange.emit(tenantIds);\r\n  };\r\n}\r\n","<app-dual-picklist\r\n  class=\"max-height\"\r\n  [available]=\"available\"\r\n  [current]=\"current\"\r\n  (currentChange)=\"currentChanged($event)\"\r\n  [displayField]=\"'name'\"\r\n  [listName]=\"'step-interactive.tenants' | translate\"\r\n></app-dual-picklist>\r\n"],"names":["RouterModule","AdminUserComponent","routes","path","component","data","type","pathMatch","AdminUserRoutingModule","forChild","imports","i1","exports","ActivatedRoute","Router","TranslateService","ToastrService","Control","CreateUser","LoginTypes","UpdateUser","User","UserTypes","Subscription","combineLatest","EnumDataSource","FieldDefinition","MetaDataType","TenantAuthenticationType","ErrorsService","HydraApiService","SpinnerStateService","UserStateService","i0","ɵɵelement","ɵɵproperty","ɵɵelementStart","ɵɵtwoWayListener","AdminUserComponent_div_0_div_13_Template_app_field_valueChange_1_listener","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","password","ɵɵresetView","ɵɵelementEnd","ɵɵtemplate","AdminUserComponent_div_0_div_13_app_label_2_Template","ɵɵadvance","fieldPassword","ɵɵtwoWayProperty","user","id","AdminUserComponent_div_0_div_14_Template_app_checkbox_valueChange_1_listener","_r4","sendWelcomeMessage","ɵɵlistener","AdminUserComponent_div_0_div_15_Template_app_checkbox_valueChange_1_listener","_r5","locked","AdminUserComponent_div_0_Template_app_field_valueChange_8_listener","_r1","name","AdminUserComponent_div_0_Template_app_field_valueChange_10_listener","email","AdminUserComponent_div_0_Template_app_field_valueChange_12_listener","userLoginType","AdminUserComponent_div_0_div_13_Template","AdminUserComponent_div_0_div_14_Template","AdminUserComponent_div_0_div_15_Template","ɵɵtext","AdminUserComponent_div_0_Template_app_properties_form_tenantIdsChange_21_listener","tenantIdsChanged","ɵɵpipeBind1","formControls","dateCreatedUTC","dateModifiedUTC","fieldName","isPartnerUser","fieldEmail","fieldLoginType","loginType","loginTypes","ApplicationBased","UseTenantSettings","tenantAuthenticationType","authenticationTypes","ɵɵtextInterpolate1","val","Number","constructor","translate","userState","router","hydraApi","route","toastr","errorsService","spinner","subTenantIds","subscriptions","userLoaded","u","routeData","instant","userType","Partner","userLoadFailed","error","hide","onSave","updateUser","userSaved","userSaveFailed","createUser","showSavingSpinner","result","success","returnToGrid","object","products","userChanged","next","showErrorsModal","errors","err","onCancel","navigateByUrl","createFields","Text","label","placeholder","required","Password","List","datasource","ngOnInit","createButtons","add","params","subscribe","routeParams","getUser","userid","userProfile","tenantOptions","authenticationType","saveButton","cancelButton","push","tenantIds","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i2","i3","i4","i5","i6","i7","selectors","decls","vars","consts","template","AdminUserComponent_Template","rf","ctx","AdminUserComponent_div_0_Template","CommonModule","TranslateModule","PageModule","ComponentsModule","PropertiesFormComponent","PropertiesRolesComponent","PropertiesTenantsComponent","AutoFocusFirstInputModule","LabelModule","CheckboxModule","TabBarModule","FieldsModule","PropertiesDocumentLimitsComponent","AdminUserModule","declarations","EventEmitter","monthlyPageLimit","documentLimits","documentPageLimit","translateService","fieldChanged","perMonth","Integer","perDocument","inputs","outputs","PropertiesDocumentLimitsComponent_Template","PropertiesDocumentLimitsComponent_Template_app_checkbox_valueChange_3_listener","overrideTenantLimits","PropertiesDocumentLimitsComponent_Template_app_field_valueChange_6_listener","PropertiesDocumentLimitsComponent_Template_app_field_valueChange_8_listener","Feature","Tab","TenantType","ctx_r0","PropertiesFormComponent_div_4_Template_app_properties_tenants_tenantIdsChange_1_listener","_r2","userDocumentLimits","userStateService","tenantIdsChange","activeTab","tabs","Array","activateTab","view","tenantType","hasFeature","Capture","emit","PropertiesFormComponent_Template","PropertiesFormComponent_Template_app_tab_bar_tabSelected_1_listener","PropertiesFormComponent_div_3_Template","PropertiesFormComponent_div_4_Template","PropertiesFormComponent_div_5_Template","roleIdsChange","available","current","currentChanged","items","roleIds","item","loadPicklistItems","getRoles","loaded","loadFailed","roles","filter","r","find","ri","PropertiesRolesComponent_Template","PropertiesRolesComponent_Template_app_dual_picklist_currentChange_0_listener","availableSubTenants","loadAvailableSubTenantsForUser","getAvailableSubTenantsForUser","loadedAvailableSubTenants","loadUserSubTenants","setAvailableAndCurrent","getUserSubTenants","loadedUserSubTenants","subTenants","map","t","includes","PropertiesTenantsComponent_Template","PropertiesTenantsComponent_Template_app_dual_picklist_currentChange_0_listener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}