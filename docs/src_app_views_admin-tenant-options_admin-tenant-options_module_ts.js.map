{"version":3,"file":"src_app_views_admin-tenant-options_admin-tenant-options_module_ts.js","mappings":"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","sources":["./src/app/views/admin-tenant-options/admin-tenant-options-authentication/admin-tenant-options-authentication.component.ts","./src/app/views/admin-tenant-options/admin-tenant-options-authentication/admin-tenant-options-authentication.component.html","./src/app/views/admin-tenant-options/admin-tenant-options-document-limits/admin-tenant-options-document-limits.component.ts","./src/app/views/admin-tenant-options/admin-tenant-options-document-limits/admin-tenant-options-document-limits.component.html","./src/app/views/admin-tenant-options/admin-tenant-options-measurement-settings/admin-tenant-options-measurement-settings.component.ts","./src/app/views/admin-tenant-options/admin-tenant-options-measurement-settings/admin-tenant-options-measurement-settings.component.html","./src/app/views/admin-tenant-options/admin-tenant-options-password-policy/admin-tenant-options-password-policy.component.ts","./src/app/views/admin-tenant-options/admin-tenant-options-password-policy/admin-tenant-options-password-policy.component.html","./src/app/views/admin-tenant-options/admin-tenant-options-routing.module.ts","./src/app/views/admin-tenant-options/admin-tenant-options.component.ts","./src/app/views/admin-tenant-options/admin-tenant-options.component.html","./src/app/views/admin-tenant-options/admin-tenant-options.module.ts"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  FieldDefinition,\r\n  IFieldOptions,\r\n  MetaDataType,\r\n  FixedDataSource,\r\n  TenantOptions,\r\n  TenantAuthenticationType,\r\n} from 'shared-code-lib';\r\nimport { UserStateService } from '../../../../app/blocks/services/user-state.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-tenant-options-authentication',\r\n  templateUrl: './admin-tenant-options-authentication.component.html',\r\n  styleUrls: ['./admin-tenant-options-authentication.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminTenantOptionsAuthenticationComponent implements OnInit {\r\n  @Input() tenantOptions: TenantOptions;\r\n  @Output() fieldChanged = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('certificateInput', { static: true }) certificateInput: ElementRef;\r\n\r\n  fieldType: FieldDefinition;\r\n\r\n  fieldClientId: FieldDefinition;\r\n  fieldAuthority: FieldDefinition;\r\n\r\n  authenticationTypesDataSource: FixedDataSource;\r\n  MetaDataType = MetaDataType;\r\n\r\n  get tenantOptionsAuthenticationType() {\r\n    return `${this.tenantOptions.authenticationType}`;\r\n  }\r\n  set tenantOptionsAuthenticationType(val: string) {\r\n    this.tenantOptions.authenticationType = Number(val);\r\n  }\r\n\r\n  constructor(private translateService: TranslateService, public userState: UserStateService) {}\r\n\r\n  ngOnInit() {\r\n    this.createFields();\r\n  }\r\n\r\n  createFields = (): void => {\r\n    this.fieldClientId = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('admin-tenant-options.sso-client-id'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.sso-client-id-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldAuthority = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('admin-tenant-options.sso-authority'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.sso-authority-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    const authenticationTypes = new Array<IFieldOptions>();\r\n    authenticationTypes.push({\r\n      name: this.translateService.instant('admin-tenant-options.authentication-type-application-based'),\r\n      value: `${TenantAuthenticationType.ApplicationBased}`,\r\n    });\r\n    authenticationTypes.push({\r\n      name: this.translateService.instant('admin-tenant-options.authentication-type-sso'),\r\n      value: `${TenantAuthenticationType.SSO}`,\r\n    });\r\n    authenticationTypes.push({\r\n      name: this.translateService.instant('admin-tenant-options.authentication-type-saml'),\r\n      value: `${TenantAuthenticationType.SAML}`,\r\n    });\r\n\r\n    this.authenticationTypesDataSource = new FixedDataSource(authenticationTypes);\r\n\r\n    this.fieldType = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translateService.instant('admin-tenant-options.authentication-type'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.authentication-type'),\r\n      required: true,\r\n      datasource: this.authenticationTypesDataSource,\r\n    });\r\n  };\r\n\r\n  tenantFieldChanged = (): void => {\r\n    this.fieldChanged.emit(true);\r\n  };\r\n}\r\n","<div class=\"adminit-tenant-options-authentication\">\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"fieldType\"\r\n      [(value)]=\"tenantOptionsAuthenticationType\"\r\n      (valueChange)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n\r\n  <div *ngIf=\"tenantOptions.authenticationType == 1\">\r\n    <div class=\"col p-0\">\r\n      <app-field\r\n        [field]=\"fieldClientId\"\r\n        [(value)]=\"tenantOptions.ssoClientId\"\r\n        (change)=\"tenantFieldChanged()\"\r\n      ></app-field>\r\n    </div>\r\n\r\n    <div class=\"col p-0\">\r\n      <app-field\r\n        [field]=\"fieldAuthority\"\r\n        [(value)]=\"tenantOptions.ssoAuthority\"\r\n        (change)=\"tenantFieldChanged()\"\r\n      ></app-field>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"tenantOptions.authenticationType == 2\">\r\n    <app-saml-options [idpSettings]=\"tenantOptions.idp\"> </app-saml-options>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DocumentLimits, FieldDefinition, MetaDataType } from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-admin-tenant-options-document-limits',\r\n  templateUrl: './admin-tenant-options-document-limits.component.html',\r\n  styleUrls: ['./admin-tenant-options-document-limits.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminTenantOptionsDocumentLimitsComponent implements OnInit {\r\n  @Input() documentLimits: DocumentLimits;\r\n  @Output() fieldChanged = new EventEmitter<boolean>();\r\n\r\n  fieldType: FieldDefinition;\r\n\r\n  perMonth: FieldDefinition;\r\n  perDocument: FieldDefinition;\r\n\r\n  get monthlyPageLimit() {\r\n    return `${this.documentLimits.monthlyPageLimit}`;\r\n  }\r\n  set monthlyPageLimit(val: string) {\r\n    this.documentLimits.monthlyPageLimit = Number(val);\r\n  }\r\n  get documentPageLimit() {\r\n    return `${this.documentLimits.documentPageLimit}`;\r\n  }\r\n  set documentPageLimit(val: string) {\r\n    this.documentLimits.documentPageLimit = Number(val);\r\n  }\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.createFields();\r\n  }\r\n\r\n  createFields = (): void => {\r\n    this.perMonth = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.document-limits.total-per-month'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.document-limits.total-per-month-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.perDocument = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.document-limits.total-per-document'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.document-limits.total-per-document-placeholder'),\r\n      required: true,\r\n    });\r\n  };\r\n\r\n  tenantFieldChanged = (): void => {\r\n    this.fieldChanged.emit(true);\r\n  };\r\n}\r\n","<div class=\"adminit-tenant-options-document-limits\">\r\n  <div class=\"col p-0\" appAutoFocusFirstInput>\r\n    <app-field [field]=\"perMonth\" [(value)]=\"monthlyPageLimit\" (change)=\"tenantFieldChanged()\"></app-field>\r\n  </div>\r\n\r\n  <div class=\"col p-0\">\r\n    <app-field [field]=\"perDocument\" [(value)]=\"documentPageLimit\" (change)=\"tenantFieldChanged()\"></app-field>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EnumDataSource, FieldDefinition, MeasurementSettings, MeasurementUnit, MetaDataType } from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-admin-tenant-options-measurement-settings',\r\n  templateUrl: './admin-tenant-options-measurement-settings.component.html',\r\n  styleUrls: ['./admin-tenant-options-measurement-settings.component.scss'],\r\n})\r\nexport class AdminTenantOptionsMeasurementSettingsComponent implements OnInit {\r\n  @Input() measurementSettings: MeasurementSettings;\r\n  @Output() fieldChanged = new EventEmitter<boolean>();\r\n\r\n  fieldUnit: FieldDefinition;\r\n\r\n  get measurementSettingsUnit() {\r\n    return `${this.measurementSettings.unit}`;\r\n  }\r\n  set measurementSettingsUnit(val: string) {\r\n    this.measurementSettings.unit = Number(val);\r\n  }\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.createFields();\r\n  }\r\n\r\n  createFields = (): void => {\r\n    this.fieldUnit = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translateService.instant('admin-tenant-options.measurement-settings.unit'),\r\n      required: true,\r\n      datasource: new EnumDataSource(\r\n        MeasurementUnit,\r\n        'admin-tenant-options.measurement-settings.unit-enum',\r\n        this.translateService\r\n      ),\r\n    });\r\n  };\r\n\r\n  tenantFieldChanged = (): void => {\r\n    this.fieldChanged.emit(true);\r\n  };\r\n}\r\n","<div class=\"admin-tenant-options-measurement-settings\">\r\n  <div class=\"col p-0\" appAutoFocusFirstInput>\r\n    <app-field [field]=\"fieldUnit\" [(value)]=\"measurementSettingsUnit\" (change)=\"tenantFieldChanged()\"></app-field>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  FieldDefinition,\r\n  MetaDataType,\r\n  PasswordPolicy,\r\n  ExpirationUnits,\r\n  IFieldOptions,\r\n  FixedDataSource,\r\n} from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-admin-tenant-options-password-policy',\r\n  templateUrl: './admin-tenant-options-password-policy.component.html',\r\n  styleUrls: ['./admin-tenant-options-password-policy.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminTenantOptionsPasswordPolicyComponent implements OnInit {\r\n  @Input() passwordPolicy: PasswordPolicy;\r\n  @Output() fieldChanged = new EventEmitter<boolean>();\r\n  expirationUnitsDataSource: FixedDataSource;\r\n  expirationUnits: FieldDefinition;\r\n  expireAfter: FieldDefinition;\r\n  passwordMemoryCount: FieldDefinition;\r\n  minimumLength: FieldDefinition;\r\n  minimumNumbers: FieldDefinition;\r\n  minimumSpecialCharacters: FieldDefinition;\r\n  minimumUpperCaseCharacters: FieldDefinition;\r\n  minimumLowerCaseCharacters: FieldDefinition;\r\n\r\n  get passwordPolicyExpiresAfter() {\r\n    return `${this.passwordPolicy.expiresAfter}`;\r\n  }\r\n  set passwordPolicyExpiresAfter(val: string) {\r\n    this.passwordPolicy.expiresAfter = Number(val);\r\n  }\r\n  get passwordPolicyExpireUnits() {\r\n    return `${this.passwordPolicy.expireUnits}`;\r\n  }\r\n  set passwordPolicyExpireUnits(val: string) {\r\n    this.passwordPolicy.expireUnits = Number(val);\r\n  }\r\n  get passwordPolicyPasswordMemoryCount() {\r\n    return `${this.passwordPolicy.passwordMemoryCount}`;\r\n  }\r\n  set passwordPolicyPasswordMemoryCount(val: string) {\r\n    this.passwordPolicy.passwordMemoryCount = Number(val);\r\n  }\r\n  get passwordPolicyMinimumLength() {\r\n    return `${this.passwordPolicy.minimumLength}`;\r\n  }\r\n  set passwordPolicyMinimumLength(val: string) {\r\n    this.passwordPolicy.minimumLength = Number(val);\r\n  }\r\n  get passwordPolicyMinimumNumbers() {\r\n    return `${this.passwordPolicy.minimumNumbers}`;\r\n  }\r\n  set passwordPolicyMinimumNumbers(val: string) {\r\n    this.passwordPolicy.minimumNumbers = Number(val);\r\n  }\r\n  get passwordPolicyMinimumSpecialCharacters() {\r\n    return `${this.passwordPolicy.minimumSpecialCharacters}`;\r\n  }\r\n  set passwordPolicyMinimumSpecialCharacters(val: string) {\r\n    this.passwordPolicy.minimumSpecialCharacters = Number(val);\r\n  }\r\n  get passwordPolicyMinimumUpperCaseCharacters() {\r\n    return `${this.passwordPolicy.minimumUpperCaseCharacters}`;\r\n  }\r\n  set passwordPolicyMinimumUpperCaseCharacters(val: string) {\r\n    this.passwordPolicy.minimumUpperCaseCharacters = Number(val);\r\n  }\r\n  get passwordPolicyMinimumLowerCaseCharacters() {\r\n    return `${this.passwordPolicy.minimumLowerCaseCharacters}`;\r\n  }\r\n  set passwordPolicyMinimumLowerCaseCharacters(val: string) {\r\n    this.passwordPolicy.minimumLowerCaseCharacters = Number(val);\r\n  }\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.createFields();\r\n  }\r\n\r\n  createFields = (): void => {\r\n    this.expireAfter = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.expire-after'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.password-policy.expire-after-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.passwordMemoryCount = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.password-memory-count'),\r\n      placeholder: this.translateService.instant(\r\n        'admin-tenant-options.password-policy.password-memory-count-placeholder'\r\n      ),\r\n      required: true,\r\n    });\r\n\r\n    this.minimumLength = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.min-length'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.password-policy.min-length-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.minimumNumbers = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.min-numbers'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.password-policy.min-numbers-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.minimumSpecialCharacters = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.min-special-characters'),\r\n      placeholder: this.translateService.instant(\r\n        'admin-tenant-options.password-policy.min-special-characters-placeholder'\r\n      ),\r\n      required: true,\r\n    });\r\n\r\n    this.minimumUpperCaseCharacters = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.min-upper-case-characters'),\r\n      placeholder: this.translateService.instant(\r\n        'admin-tenant-options.password-policy.min-upper-case-characters-placeholder'\r\n      ),\r\n      required: true,\r\n    });\r\n\r\n    this.minimumLowerCaseCharacters = new FieldDefinition({\r\n      type: MetaDataType.Integer,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.min-lower-case-characters'),\r\n      placeholder: this.translateService.instant(\r\n        'admin-tenant-options.password-policy.min-lower-case-characters-placeholder'\r\n      ),\r\n      required: true,\r\n    });\r\n\r\n    const expirationUnits = new Array<IFieldOptions>();\r\n\r\n    expirationUnits.push({\r\n      name: this.translateService.instant('admin-tenant-options.password-policy.unit-' + ExpirationUnits.Day),\r\n      value: `${ExpirationUnits.Day}`,\r\n    });\r\n    expirationUnits.push({\r\n      name: this.translateService.instant('admin-tenant-options.password-policy.unit-' + ExpirationUnits.Week),\r\n      value: `${ExpirationUnits.Week}`,\r\n    });\r\n    expirationUnits.push({\r\n      name: this.translateService.instant('admin-tenant-options.password-policy.unit-' + ExpirationUnits.Month),\r\n      value: `${ExpirationUnits.Month}`,\r\n    });\r\n    expirationUnits.push({\r\n      name: this.translateService.instant('admin-tenant-options.password-policy.unit-' + ExpirationUnits.Year),\r\n      value: `${ExpirationUnits.Year}`,\r\n    });\r\n\r\n    this.expirationUnitsDataSource = new FixedDataSource(expirationUnits);\r\n    this.expirationUnits = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translateService.instant('admin-tenant-options.password-policy.expiration-unit'),\r\n      placeholder: this.translateService.instant('admin-tenant-options.password-policy.expiration-unit-placeholder'),\r\n      required: true,\r\n      datasource: this.expirationUnitsDataSource,\r\n    });\r\n  };\r\n\r\n  tenantFieldChanged = (): void => {\r\n    this.fieldChanged.emit(true);\r\n  };\r\n}\r\n","<div class=\"adminit-tenant-options-password-policy\">\r\n  <div class=\"col p-0 row\">\r\n    <app-field\r\n      class=\"col-6\"\r\n      [field]=\"expireAfter\"\r\n      [(value)]=\"passwordPolicyExpiresAfter\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n    <app-field class=\"col-6\" [field]=\"expirationUnits\" [(value)]=\"passwordPolicyExpireUnits\"></app-field>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"passwordMemoryCount\"\r\n      [(value)]=\"passwordPolicyPasswordMemoryCount\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"minimumLength\"\r\n      [(value)]=\"passwordPolicyMinimumLength\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"minimumNumbers\"\r\n      [(value)]=\"passwordPolicyMinimumNumbers\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"minimumSpecialCharacters\"\r\n      [(value)]=\"passwordPolicyMinimumSpecialCharacters\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"minimumUpperCaseCharacters\"\r\n      [(value)]=\"passwordPolicyMinimumUpperCaseCharacters\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-field\r\n      [field]=\"minimumLowerCaseCharacters\"\r\n      [(value)]=\"passwordPolicyMinimumLowerCaseCharacters\"\r\n      (change)=\"tenantFieldChanged()\"\r\n    ></app-field>\r\n  </div>\r\n\r\n  <div class=\"col p-0\">\r\n    <app-checkbox\r\n      [(value)]=\"passwordPolicy.excludesPartOfName\"\r\n      label=\"{{ 'admin-tenant-options.password-policy.excludes-part-of-name-modal-label' | translate }}\"\r\n      (valueChange)=\"tenantFieldChanged()\"\r\n    ></app-checkbox>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-checkbox\r\n      [(value)]=\"passwordPolicy.excludesPartOfEmailUserName\"\r\n      label=\"{{ 'admin-tenant-options.password-policy.excludes-part-of-email-username-modal-label' | translate }}\"\r\n      (valueChange)=\"tenantFieldChanged()\"\r\n    ></app-checkbox>\r\n  </div>\r\n  <div class=\"col p-0\">\r\n    <app-checkbox\r\n      [(value)]=\"passwordPolicy.excludesPartOfEmailDomain\"\r\n      label=\"{{ 'admin-tenant-options.password-policy.excludes-part-of-email-domain-modal-label' | translate }}\"\r\n      (valueChange)=\"tenantFieldChanged()\"\r\n    ></app-checkbox>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminTenantOptionsComponent } from './admin-tenant-options.component';\r\nimport { AdminTenantOptionsAuthenticationComponent } from './admin-tenant-options-authentication/admin-tenant-options-authentication.component';\r\nimport { AdminTenantOptionsDocumentLimitsComponent } from './admin-tenant-options-document-limits/admin-tenant-options-document-limits.component';\r\nimport { AdminTenantOptionsPasswordPolicyComponent } from './admin-tenant-options-password-policy/admin-tenant-options-password-policy.component';\r\nimport { AdminTenantOptionsMeasurementSettingsComponent } from './admin-tenant-options-measurement-settings/admin-tenant-options-measurement-settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminTenantOptionsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminTenantOptionsRoutingModule {}\r\n\r\nexport const routedComponents = [\r\n  AdminTenantOptionsComponent,\r\n  AdminTenantOptionsAuthenticationComponent,\r\n  AdminTenantOptionsDocumentLimitsComponent,\r\n  AdminTenantOptionsPasswordPolicyComponent,\r\n  AdminTenantOptionsMeasurementSettingsComponent,\r\n];\r\n","import { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HydraApiService } from '../../blocks/services/hydra-api.service';\r\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\r\nimport { SpinnerStateService } from '../../blocks/services/spinner-state.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserStateService } from '../../blocks/services/user-state.service';\r\nimport { ApiResult } from '../../blocks/services/models';\r\nimport {\r\n  DocumentLimits,\r\n  TenantDetails,\r\n  TenantOptions,\r\n  PasswordPolicy,\r\n  MeasurementSettings,\r\n  MeasurementUnit,\r\n  Feature,\r\n} from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-admin-tenant-options',\r\n  templateUrl: './admin-tenant-options.component.html',\r\n  styleUrls: ['./admin-tenant-options.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminTenantOptionsComponent implements OnInit, AfterViewInit {\r\n  tenantDetails: TenantDetails;\r\n  optionsErrors: string[] = [];\r\n  documentLimitsErrors: string[] = [];\r\n  passwordPolicyErrors: string[] = [];\r\n  measurementSettingsErrors: string[] = [];\r\n  tenantoptionsdocumentlimitsModalClosed: boolean = true;\r\n  expireUnits: number;\r\n  showDocumentLimits = false;\r\n  showMeasurementSettings = false;\r\n  measurementUnit = MeasurementUnit;\r\n\r\n  authenticationModal: NgxSmartModalComponent;\r\n  documentLimitsModal: NgxSmartModalComponent;\r\n  passwordPolicyModal: NgxSmartModalComponent;\r\n  measurementSettingsModal: NgxSmartModalComponent;\r\n\r\n  get idpPartnerCertificates() {\r\n    if (!this.tenantDetails?.options?.idp?.partnerCertificates?.length) return '';\r\n\r\n    let certificatesNames = '';\r\n    for (let i = 0; i < this.tenantDetails.options.idp.partnerCertificates.length; i++) {\r\n      if (!this.tenantDetails.options.idp.partnerCertificates[i].fileName) return;\r\n\r\n      if (certificatesNames) certificatesNames += ', ';\r\n      certificatesNames += this.tenantDetails.options.idp.partnerCertificates[i].fileName;\r\n    }\r\n\r\n    return certificatesNames;\r\n  }\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private hydraApi: HydraApiService,\r\n    private ngxSmartModalService: NgxSmartModalService,\r\n    private spinnerService: SpinnerStateService,\r\n    private toastrService: ToastrService,\r\n    private userState: UserStateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.showDocumentLimits = this.userState.hasFeature(Feature.Capture);\r\n    this.showMeasurementSettings = this.userState.hasFeature(Feature.OLCTED);\r\n    this.hydraApi.getTenantDetails(this.tenantDetailsLoaded, this.tenantDetailsLoadFailed);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authenticationModal = this.ngxSmartModalService.getModal('tenantoptionsauthentication');\r\n    this.documentLimitsModal = this.ngxSmartModalService.getModal('tenantoptionsdocumentlimits');\r\n    this.passwordPolicyModal = this.ngxSmartModalService.getModal('tenantoptionspasswordpolicy');\r\n    this.measurementSettingsModal = this.ngxSmartModalService.getModal('tenantoptionsmeasurementsettings');\r\n  }\r\n\r\n  tenantDetailsLoaded = (td: TenantDetails): void => {\r\n    this.tenantDetails = td;\r\n    this.updateExpireUnits();\r\n  };\r\n\r\n  tenantDetailsLoadFailed = () => {\r\n    this.toastrService.error(this.translateService.instant('admin-tenant-options.failed-to-load-tenant-details'));\r\n  };\r\n\r\n  updateExpireUnits = (): void => {\r\n    this.expireUnits = this.tenantDetails.passwordPolicy.expireUnits;\r\n    if (this.tenantDetails.passwordPolicy.expiresAfter == 1) {\r\n      if (this.expireUnits == 0) this.expireUnits = 4;\r\n      else if (this.expireUnits == 1) this.expireUnits = 5;\r\n      else if (this.expireUnits == 2) this.expireUnits = 6;\r\n      else if (this.expireUnits == 3) this.expireUnits = 7;\r\n    }\r\n  };\r\n\r\n  //////////////// Authentication Options /////////////\r\n\r\n  onEditAuthentication = () => {\r\n    this.ngxSmartModalService.setModalData(\r\n      {\r\n        options: new TenantOptions(this.tenantDetails.options),\r\n      },\r\n      'tenantoptionsauthentication',\r\n      true\r\n    );\r\n\r\n    this.authenticationModal.open();\r\n  };\r\n\r\n  saveAuthentication = () => {\r\n    const data = this.ngxSmartModalService.getModalData('tenantoptionsauthentication') as any;\r\n\r\n    this.hydraApi.updateTenantOptions(data.options, this.authenticationUpdated, this.authenticationUpdateFailed);\r\n\r\n    this.spinnerService.show(\r\n      this.translateService.instant('admin-tenant-options.saving'),\r\n      document.getElementById('app-spinner-panel')\r\n    );\r\n  };\r\n\r\n  authenticationUpdated = (result: ApiResult) => {\r\n    this.spinnerService.hide();\r\n\r\n    if (result.success) {\r\n      this.tenantDetails.options = (\r\n        this.ngxSmartModalService.getModalData('tenantoptionsauthentication') as any\r\n      ).options;\r\n      this.userState.userProfile.tenantOptions.authenticationType = this.tenantDetails.options.authenticationType;\r\n\r\n      this.authenticationModal.close();\r\n      this.toastrService.success(this.translateService.instant('admin-tenant-options.save-succeeded'));\r\n    } else {\r\n      result.errors.forEach((error) => {\r\n        this.optionsErrors.push(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  authenticationUpdateFailed = () => {\r\n    this.spinnerService.hide();\r\n    this.optionsErrors.push(this.translateService.instant('admin-tenant-options.save-failed'));\r\n  };\r\n\r\n  authenticationChanged = (checkFieldChanged: boolean) => {\r\n    this.optionsErrors = [];\r\n  };\r\n\r\n  onAuthenticationModalClosed = (): void => {\r\n    this.optionsErrors = [];\r\n  };\r\n\r\n  cancelAuthentication = () => {\r\n    this.authenticationModal.close();\r\n  };\r\n\r\n  //////////////// Document Limits /////////////\r\n\r\n  onEditDocumentLimits = () => {\r\n    this.ngxSmartModalService.setModalData(\r\n      {\r\n        documentLimits: new DocumentLimits(this.tenantDetails.documentLimits),\r\n      },\r\n      'tenantoptionsdocumentlimits',\r\n      true\r\n    );\r\n    this.tenantoptionsdocumentlimitsModalClosed = false;\r\n    this.documentLimitsModal.open();\r\n  };\r\n\r\n  saveDocumentLimits = () => {\r\n    const data = this.ngxSmartModalService.getModalData('tenantoptionsdocumentlimits') as any;\r\n\r\n    this.hydraApi.updateDocumentLimits(\r\n      data.documentLimits,\r\n      this.documentLimitsUpdated,\r\n      this.documentLimitsUpdateFailed\r\n    );\r\n\r\n    this.spinnerService.show(\r\n      this.translateService.instant('admin-tenant-options.document-limits.saving'),\r\n      document.getElementById('app-spinner-panel')\r\n    );\r\n  };\r\n\r\n  documentLimitsUpdated = (result: ApiResult) => {\r\n    this.spinnerService.hide();\r\n    if (result.success) {\r\n      this.tenantDetails.documentLimits = (\r\n        this.ngxSmartModalService.getModalData('tenantoptionsdocumentlimits') as any\r\n      ).documentLimits;\r\n\r\n      this.documentLimitsModal.close();\r\n      this.toastrService.success(this.translateService.instant('admin-tenant-options.document-limits.save-succeeded'));\r\n    } else {\r\n      result.errors.forEach((error) => {\r\n        this.documentLimitsErrors.push(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  documentLimitsUpdateFailed = () => {\r\n    this.passwordPolicyErrors = [];\r\n    this.spinnerService.hide();\r\n    this.documentLimitsErrors.push(this.translateService.instant('admin-tenant-options.document-limits.save-failed'));\r\n  };\r\n\r\n  documentLimitsChanged = (checkFieldChanged: boolean) => {\r\n    this.documentLimitsErrors = [];\r\n  };\r\n\r\n  onDocumentLimitModalClosed = (): void => {\r\n    this.documentLimitsErrors = [];\r\n  };\r\n\r\n  cancelDocumentLimits = () => {\r\n    this.tenantoptionsdocumentlimitsModalClosed = true;\r\n    this.documentLimitsModal.close();\r\n  };\r\n\r\n  //////////////// Passowrd Policy /////////////\r\n\r\n  onEditMeasurementSettings = () => {\r\n    this.ngxSmartModalService.setModalData(\r\n      {\r\n        measurementSettings: new MeasurementSettings(this.tenantDetails.tedOptions.measurementSettings),\r\n      },\r\n      'tenantoptionsmeasurementsettings',\r\n      true\r\n    );\r\n    this.measurementSettingsModal.open();\r\n  };\r\n\r\n  savePasswordPolicy = () => {\r\n    this.passwordPolicyErrors = [];\r\n    const data = this.ngxSmartModalService.getModalData('tenantoptionspasswordpolicy') as any;\r\n    this.hydraApi.updatePasswordPolicy(\r\n      data.passwordPolicy,\r\n      this.passwordPolicyUpdated,\r\n      this.passwordPolicyUpdateFailed\r\n    );\r\n\r\n    this.spinnerService.show(\r\n      this.translateService.instant('admin-tenant-options.password-policy.saving'),\r\n      document.getElementById('app-spinner-panel')\r\n    );\r\n  };\r\n\r\n  passwordPolicyUpdated = (result: ApiResult) => {\r\n    this.passwordPolicyErrors = [];\r\n    this.spinnerService.hide();\r\n    if (result.success) {\r\n      this.tenantDetails.passwordPolicy = (\r\n        this.ngxSmartModalService.getModalData('tenantoptionspasswordpolicy') as any\r\n      ).passwordPolicy;\r\n\r\n      this.passwordPolicyModal.close();\r\n      this.toastrService.success(this.translateService.instant('admin-tenant-options.password-policy.save-succeeded'));\r\n      this.updateExpireUnits();\r\n    } else {\r\n      result.errors.forEach((error) => {\r\n        this.passwordPolicyErrors.push(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  passwordPolicyUpdateFailed = () => {\r\n    this.spinnerService.hide();\r\n    this.passwordPolicyErrors.push(this.translateService.instant('admin-tenant-options.password-policy.save-failed'));\r\n  };\r\n\r\n  passwordPolicyChanged = (checkFieldChanged: boolean) => {\r\n    this.passwordPolicyErrors = [];\r\n  };\r\n\r\n  onPasswordPolicyModalClosed = (): void => {\r\n    this.passwordPolicyErrors = [];\r\n  };\r\n\r\n  cancelPasswordPolicy = () => {\r\n    this.passwordPolicyModal.close();\r\n  };\r\n\r\n  //////////////// Measurement Settings /////////////\r\n\r\n  onEditPasswordPolicy = () => {\r\n    this.ngxSmartModalService.setModalData(\r\n      {\r\n        passwordPolicy: new PasswordPolicy(this.tenantDetails.passwordPolicy),\r\n      },\r\n      'tenantoptionspasswordpolicy',\r\n      true\r\n    );\r\n\r\n    this.passwordPolicyModal.open();\r\n  };\r\n\r\n  saveMeasurementSettings = () => {\r\n    const data = this.ngxSmartModalService.getModalData('tenantoptionsmeasurementsettings') as any;\r\n\r\n    this.userState.updateOlcUserDefaultUnit(\r\n      data.measurementSettings,\r\n      this.measurementSettingsUpdated,\r\n      this.measurementSettingsUpdateFailed\r\n    );\r\n\r\n    this.spinnerService.show(\r\n      this.translateService.instant('admin-tenant-options.measurement-settings.saving'),\r\n      document.getElementById('app-spinner-panel')\r\n    );\r\n  };\r\n\r\n  measurementSettingsUpdated = (result: ApiResult) => {\r\n    this.spinnerService.hide();\r\n\r\n    if (result.success) {\r\n      this.tenantDetails.tedOptions.measurementSettings = (\r\n        this.ngxSmartModalService.getModalData('tenantoptionsmeasurementsettings') as any\r\n      ).measurementSettings;\r\n\r\n      this.measurementSettingsModal.close();\r\n      this.toastrService.success(\r\n        this.translateService.instant('admin-tenant-options.measurement-settings.save-succeeded')\r\n      );\r\n    } else {\r\n      result.errors.forEach((error) => {\r\n        this.measurementSettingsErrors.push(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  measurementSettingsUpdateFailed = () => {\r\n    this.spinnerService.hide();\r\n    this.measurementSettingsErrors.push(\r\n      this.translateService.instant('admin-tenant-options.measurement-settings.save-failed')\r\n    );\r\n  };\r\n\r\n  measurementSettingsChanged = () => {\r\n    this.measurementSettingsErrors = [];\r\n  };\r\n\r\n  onMeasurementSettingsModalClosed = (): void => {\r\n    this.measurementSettingsErrors = [];\r\n  };\r\n\r\n  cancelMeasurementSettings = () => {\r\n    this.measurementSettingsModal.close();\r\n  };\r\n}\r\n","<div class=\"admin-tenant-options\">\r\n  <app-secondary-header [headerText]=\"'admin-tenant-options.header-text' | translate\"> </app-secondary-header>\r\n\r\n  <div *ngIf=\"tenantDetails\">\r\n    <div class=\"card border-0\">\r\n      <div class=\"card-header bg-card-header\">\r\n        {{ tenantDetails.name }}\r\n      </div>\r\n\r\n      <div\r\n        class=\"card-body\"\r\n        fxFlex=\"auto\"\r\n        [perfectScrollbar]=\"{ suppressScrollY: false }\"\r\n        #panelScroll=\"ngxPerfectScrollbar\"\r\n        [autoUpdatePerfectScroll]=\"panelScroll\"\r\n      >\r\n        <div class=\"section\" id=\"authentication-options\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            {{ 'admin-tenant-options.authentication-options' | translate }}\r\n            <button\r\n              class=\"button-icon\"\r\n              id=\"edit-authentication-options\"\r\n              (click)=\"onEditAuthentication()\"\r\n              title=\"{{ 'Common.Edit' | translate }}\"\r\n            >\r\n              <i class=\"fa fa-pencil-alt\"></i>\r\n            </button>\r\n          </div>\r\n          <ul class=\"list-group list-group-flush\" *ngIf=\"tenantDetails.options.authenticationType == 0\">\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.authentication-type:' | translate }}\r\n              </span>\r\n              {{ 'admin-tenant-options.authentication-type-application-based' | translate }}\r\n            </li>\r\n          </ul>\r\n\r\n          <ul class=\"list-group list-group-flush\" *ngIf=\"tenantDetails.options.authenticationType == 1\">\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.authentication-type:' | translate }}\r\n              </span>\r\n              {{ 'admin-tenant-options.authentication-type-sso' | translate }}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.sso-client-id' | translate }}:\r\n              </span>\r\n              {{ tenantDetails.options.ssoClientId }}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.sso-authority' | translate }}:\r\n              </span>\r\n              {{ tenantDetails.options.ssoAuthority }}\r\n            </li>\r\n          </ul>\r\n\r\n          <ul class=\"list-group list-group-flush\" *ngIf=\"tenantDetails.options.authenticationType == 2\">\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.authentication-type' | translate }}:\r\n              </span>\r\n              {{ 'admin-tenant-options.authentication-type-saml' | translate }}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\"> {{ 'saml-options.idp.name' | translate }}: </span>\r\n              {{ tenantDetails.options.idp.name }}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\"> {{ 'saml-options.idp.sso-url' | translate }}: </span>\r\n              {{ tenantDetails.options.idp.singleSignOnServiceUrl }}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'saml-options.idp.certificates' | translate }}:\r\n              </span>\r\n              {{ idpPartnerCertificates }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"section\" id=\"document-limits\" *ngIf=\"showDocumentLimits\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            {{ 'admin-tenant-options.document-limits.title' | translate }}\r\n            <button\r\n              class=\"button-icon\"\r\n              id=\"edit-document-limits\"\r\n              (click)=\"onEditDocumentLimits()\"\r\n              title=\"{{ 'Common.Edit' | translate }}\"\r\n            >\r\n              <i class=\"fa fa-pencil-alt\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.document-limits.total-per-month:' | translate }}\r\n              </span>\r\n              {{ tenantDetails.documentLimits.monthlyPageLimit }}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.document-limits.total-per-document:' | translate }}\r\n              </span>\r\n              {{ tenantDetails.documentLimits.documentPageLimit }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"section\" id=\"password-policy\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            {{ 'admin-tenant-options.password-policy.title' | translate }}\r\n            <button\r\n              class=\"button-icon\"\r\n              id=\"edit-password-policy\"\r\n              (click)=\"onEditPasswordPolicy()\"\r\n              title=\"{{ 'Common.Edit' | translate }}\"\r\n            >\r\n              <i class=\"fa fa-pencil-alt\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.expire-after:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-expriresAfter\">{{ tenantDetails.passwordPolicy.expiresAfter }}</span>\r\n              <span id=\"password-policy-expireUnits\">\r\n                {{ 'admin-tenant-options.password-policy.unit-' + expireUnits | translate }}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.password-memory-count:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-passwordMemoryCount\">\r\n                {{ tenantDetails.passwordPolicy.passwordMemoryCount }}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.min-length:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-minimumLength\">{{ tenantDetails.passwordPolicy.minimumLength }} </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.min-numbers:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-minimumNumbers\">{{ tenantDetails.passwordPolicy.minimumNumbers }} </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.min-special-characters:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-minimumSpecialCharacters\"\r\n                >{{ tenantDetails.passwordPolicy.minimumSpecialCharacters }}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.min-upper-case-characters:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-minimumUpperCaseCharacters\"\r\n                >{{ tenantDetails.passwordPolicy.minimumUpperCaseCharacters }}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.min-lower-case-characters:' | translate }}\r\n              </span>\r\n              <span id=\"password-policy-minimumLowerCaseCharacters\"\r\n                >{{ tenantDetails.passwordPolicy.minimumLowerCaseCharacters }}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.excludes-part-of-name' | translate }}\r\n              </span>\r\n              <span\r\n                id=\"password-policy-excludesPartOfName\"\r\n                [translate]=\"\r\n                  tenantDetails.passwordPolicy.excludesPartOfName\r\n                    ? 'admin-tenant-options.password-policy.Yes'\r\n                    : 'admin-tenant-options.password-policy.No'\r\n                \"\r\n              ></span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.excludes-part-of-email-username' | translate }}\r\n              </span>\r\n              <span\r\n                id=\"password-policy-excludesPartOfEmailUserName\"\r\n                [translate]=\"\r\n                  tenantDetails.passwordPolicy.excludesPartOfEmailUserName\r\n                    ? 'admin-tenant-options.password-policy.Yes'\r\n                    : 'admin-tenant-options.password-policy.No'\r\n                \"\r\n              >\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.password-policy.excludes-part-of-email-domain' | translate }}\r\n              </span>\r\n              <span\r\n                id=\"password-policy-excludesPartOfEmailDomain\"\r\n                [translate]=\"\r\n                  tenantDetails.passwordPolicy.excludesPartOfEmailDomain\r\n                    ? 'admin-tenant-options.password-policy.Yes'\r\n                    : 'admin-tenant-options.password-policy.No'\r\n                \"\r\n              >\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"section\" id=\"measurement-settings\" *ngIf=\"showMeasurementSettings\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            {{ 'admin-tenant-options.measurement-settings.title' | translate }}\r\n            <button\r\n              class=\"button-icon\"\r\n              id=\"edit-measurement-settings\"\r\n              (click)=\"onEditMeasurementSettings()\"\r\n              title=\"{{ 'Common.Edit' | translate }}\"\r\n            >\r\n              <i class=\"fa fa-pencil-alt\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">\r\n              <span class=\"detail text-secondary col-2 p-0 pl-1\">\r\n                {{ 'admin-tenant-options.measurement-settings.unit' | translate }}\r\n              </span>\r\n              {{\r\n                'admin-tenant-options.measurement-settings.unit-enum.' +\r\n                  measurementUnit[tenantDetails.tedOptions.measurementSettings.unit] | translate\r\n              }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-smart-modal\r\n    #tenantoptionsauthentication\r\n    [closable]=\"false\"\r\n    [escapable]=\"true\"\r\n    [dismissable]=\"false\"\r\n    (onClose)=\"onAuthenticationModalClosed()\"\r\n    customClass=\"modal-content modal-lg\"\r\n    identifier=\"tenantoptionsauthentication\"\r\n  >\r\n    <app-modal-header\r\n      [title]=\"'admin-tenant-options.authentication-modal-title' | translate\"\r\n      [closeIconHandler]=\"cancelAuthentication\"\r\n    ></app-modal-header>\r\n\r\n    <div class=\"modal-body\" style=\"word-break: break-word\">\r\n      <div class=\"tenant-errors\" [perfectScrollbar]=\"{ suppressScrollY: false }\">\r\n        <app-errors *ngIf=\"optionsErrors.length\" [errors]=\"optionsErrors\"></app-errors>\r\n      </div>\r\n\r\n      <app-admin-tenant-options-authentication\r\n        *ngIf=\"tenantoptionsauthentication.hasData()\"\r\n        [tenantOptions]=\"$any(tenantoptionsauthentication.getData()).options\"\r\n        (fieldChanged)=\"authenticationChanged($event)\"\r\n      ></app-admin-tenant-options-authentication>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn btn-light btn-minwidth\" (click)=\"cancelAuthentication()\">\r\n        {{ 'MainHeader.Cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-primary btn-minwidth\" (click)=\"saveAuthentication()\">\r\n        {{ 'admin-tenant-options.ok-button' | translate }}\r\n      </button>\r\n    </div>\r\n  </ngx-smart-modal>\r\n\r\n  <ngx-smart-modal\r\n    #tenantoptionsdocumentlimits\r\n    [closable]=\"false\"\r\n    [escapable]=\"true\"\r\n    [dismissable]=\"false\"\r\n    (onClose)=\"onDocumentLimitModalClosed()\"\r\n    customClass=\"modal-content modal-lg\"\r\n    identifier=\"tenantoptionsdocumentlimits\"\r\n  >\r\n    <app-modal-header\r\n      [title]=\"'admin-tenant-options.document-limits.modal-title' | translate\"\r\n      [closeIconHandler]=\"cancelDocumentLimits\"\r\n    ></app-modal-header>\r\n\r\n    <div class=\"modal-body\" style=\"word-break: break-word\">\r\n      <div class=\"tenant-errors\" [perfectScrollbar]=\"{ suppressScrollY: false }\">\r\n        <app-errors *ngIf=\"documentLimitsErrors.length\" [errors]=\"documentLimitsErrors\"></app-errors>\r\n      </div>\r\n\r\n      <app-admin-tenant-options-document-limits\r\n        *ngIf=\"tenantoptionsdocumentlimits.hasData() && !tenantoptionsdocumentlimitsModalClosed\"\r\n        [documentLimits]=\"$any(tenantoptionsdocumentlimits.getData()).documentLimits\"\r\n        (fieldChanged)=\"documentLimitsChanged($event)\"\r\n      ></app-admin-tenant-options-document-limits>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn btn-light btn-minwidth\" (click)=\"cancelDocumentLimits()\">\r\n        {{ 'MainHeader.Cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-primary btn-minwidth\" (click)=\"saveDocumentLimits()\">\r\n        {{ 'admin-tenant-options.ok-button' | translate }}\r\n      </button>\r\n    </div>\r\n  </ngx-smart-modal>\r\n\r\n  <ngx-smart-modal\r\n    #tenantoptionspasswordpolicy\r\n    [closable]=\"false\"\r\n    [escapable]=\"true\"\r\n    [dismissable]=\"false\"\r\n    customClass=\"modal-content modal-lg\"\r\n    identifier=\"tenantoptionspasswordpolicy\"\r\n    (onClose)=\"onPasswordPolicyModalClosed()\"\r\n  >\r\n    <app-modal-header\r\n      [title]=\"'admin-tenant-options.password-policy.modal-title' | translate\"\r\n      [closeIconHandler]=\"cancelPasswordPolicy\"\r\n    ></app-modal-header>\r\n\r\n    <div class=\"modal-body\" style=\"word-break: break-word\">\r\n      <div class=\"tenant-errors\" [perfectScrollbar]=\"{ suppressScrollY: false }\">\r\n        <app-errors *ngIf=\"passwordPolicyErrors.length\" [errors]=\"passwordPolicyErrors\"></app-errors>\r\n      </div>\r\n\r\n      <app-admin-tenant-options-password-policy\r\n        *ngIf=\"tenantoptionspasswordpolicy.hasData()\"\r\n        [passwordPolicy]=\"$any(tenantoptionspasswordpolicy.getData()).passwordPolicy\"\r\n        (fieldChanged)=\"passwordPolicyChanged($event)\"\r\n      ></app-admin-tenant-options-password-policy>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn btn-light btn-minwidth\" (click)=\"cancelPasswordPolicy()\">\r\n        {{ 'MainHeader.Cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-primary btn-minwidth pl-2\" (click)=\"savePasswordPolicy()\">\r\n        {{ 'admin-tenant-options.ok-button' | translate }}\r\n      </button>\r\n    </div>\r\n  </ngx-smart-modal>\r\n\r\n  <ngx-smart-modal\r\n    #tenantoptionsmeasurementsettings\r\n    [closable]=\"false\"\r\n    [escapable]=\"true\"\r\n    [dismissable]=\"false\"\r\n    (onClose)=\"onMeasurementSettingsModalClosed()\"\r\n    customClass=\"modal-content modal-lg\"\r\n    identifier=\"tenantoptionsmeasurementsettings\"\r\n  >\r\n    <app-modal-header\r\n      [title]=\"'admin-tenant-options.measurement-settings.modal-title' | translate\"\r\n      [closeIconHandler]=\"cancelMeasurementSettings\"\r\n    ></app-modal-header>\r\n\r\n    <div class=\"modal-body\" style=\"word-break: break-word\">\r\n      <div class=\"tenant-errors\" [perfectScrollbar]=\"{ suppressScrollY: false }\">\r\n        <app-errors *ngIf=\"optionsErrors.length\" [errors]=\"optionsErrors\"></app-errors>\r\n      </div>\r\n      <app-admin-tenant-options-measurement-settings\r\n        *ngIf=\"tenantoptionsmeasurementsettings.hasData()\"\r\n        [measurementSettings]=\"$any(tenantoptionsmeasurementsettings.getData()).measurementSettings\"\r\n        (fieldChanged)=\"measurementSettingsChanged()\"\r\n      ></app-admin-tenant-options-measurement-settings>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn btn-light btn-minwidth\" (click)=\"cancelMeasurementSettings()\">\r\n        {{ 'MainHeader.Cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-primary btn-minwidth\" (click)=\"saveMeasurementSettings()\">\r\n        {{ 'admin-tenant-options.ok-button' | translate }}\r\n      </button>\r\n    </div>\r\n  </ngx-smart-modal>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\r\n\r\nimport { AdminTenantOptionsRoutingModule, routedComponents } from './admin-tenant-options-routing.module';\r\nimport { PageModule } from './../../blocks/page/page.module';\r\nimport {\r\n  ModalHeaderModule,\r\n  FieldsModule,\r\n  AutoFocusFirstInputModule,\r\n  CheckboxModule,\r\n  LabelModule,\r\n  AutoUpdatePerfectScrollModule,\r\n} from 'shared-code-lib';\r\nimport { ComponentsModule } from '../../blocks/components/components.module';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar-portable';\r\nimport { SAMLOptionsModule } from '../sso/saml-options/saml-options.module';\r\n\r\n@NgModule({\r\n  declarations: [routedComponents],\r\n  imports: [\r\n    CommonModule,\r\n    AdminTenantOptionsRoutingModule,\r\n    TranslateModule,\r\n    PageModule,\r\n    NgxSmartModalModule,\r\n    LabelModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    ModalHeaderModule,\r\n    PerfectScrollbarModule,\r\n    ComponentsModule,\r\n    CheckboxModule,\r\n    AutoUpdatePerfectScrollModule,\r\n    SAMLOptionsModule,\r\n  ],\r\n})\r\nexport class AdminTenantOptionsModule {}\r\n"],"names":["EventEmitter","ElementRef","TranslateService","FieldDefinition","MetaDataType","FixedDataSource","TenantOptions","TenantAuthenticationType","UserStateService","i0","ɵɵelementStart","ɵɵtwoWayListener","AdminTenantOptionsAuthenticationComponent_div_3_Template_app_field_valueChange_2_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","tenantOptions","ssoClientId","ɵɵresetView","ɵɵlistener","AdminTenantOptionsAuthenticationComponent_div_3_Template_app_field_change_2_listener","tenantFieldChanged","ɵɵelementEnd","AdminTenantOptionsAuthenticationComponent_div_3_Template_app_field_valueChange_4_listener","ssoAuthority","AdminTenantOptionsAuthenticationComponent_div_3_Template_app_field_change_4_listener","ɵɵadvance","ɵɵproperty","fieldClientId","ɵɵtwoWayProperty","fieldAuthority","ɵɵelement","idp","AdminTenantOptionsAuthenticationComponent","tenantOptionsAuthenticationType","authenticationType","val","Number","constructor","translateService","userState","fieldChanged","createFields","type","Text","label","instant","placeholder","required","authenticationTypes","Array","push","name","value","ApplicationBased","SSO","SAML","authenticationTypesDataSource","fieldType","List","datasource","emit","ngOnInit","ɵɵdirectiveInject","i1","i2","selectors","viewQuery","AdminTenantOptionsAuthenticationComponent_Query","rf","ctx","AdminTenantOptionsAuthenticationComponent_Template_app_field_valueChange_2_listener","ɵɵtemplate","AdminTenantOptionsAuthenticationComponent_div_3_Template","AdminTenantOptionsAuthenticationComponent_div_4_Template","DocumentLimits","AdminTenantOptionsDocumentLimitsComponent","monthlyPageLimit","documentLimits","documentPageLimit","perMonth","Integer","perDocument","inputs","outputs","decls","vars","consts","template","AdminTenantOptionsDocumentLimitsComponent_Template","AdminTenantOptionsDocumentLimitsComponent_Template_app_field_valueChange_2_listener","AdminTenantOptionsDocumentLimitsComponent_Template_app_field_change_2_listener","AdminTenantOptionsDocumentLimitsComponent_Template_app_field_valueChange_4_listener","AdminTenantOptionsDocumentLimitsComponent_Template_app_field_change_4_listener","EnumDataSource","MeasurementSettings","MeasurementUnit","AdminTenantOptionsMeasurementSettingsComponent","measurementSettingsUnit","measurementSettings","unit","fieldUnit","AdminTenantOptionsMeasurementSettingsComponent_Template","AdminTenantOptionsMeasurementSettingsComponent_Template_app_field_valueChange_2_listener","AdminTenantOptionsMeasurementSettingsComponent_Template_app_field_change_2_listener","PasswordPolicy","ExpirationUnits","AdminTenantOptionsPasswordPolicyComponent","passwordPolicyExpiresAfter","passwordPolicy","expiresAfter","passwordPolicyExpireUnits","expireUnits","passwordPolicyPasswordMemoryCount","passwordMemoryCount","passwordPolicyMinimumLength","minimumLength","passwordPolicyMinimumNumbers","minimumNumbers","passwordPolicyMinimumSpecialCharacters","minimumSpecialCharacters","passwordPolicyMinimumUpperCaseCharacters","minimumUpperCaseCharacters","passwordPolicyMinimumLowerCaseCharacters","minimumLowerCaseCharacters","expireAfter","expirationUnits","Day","Week","Month","Year","expirationUnitsDataSource","AdminTenantOptionsPasswordPolicyComponent_Template","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_2_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_2_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_3_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_5_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_5_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_7_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_7_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_9_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_9_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_11_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_11_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_13_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_13_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_valueChange_15_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_field_change_15_listener","AdminTenantOptionsPasswordPolicyComponent_Template_app_checkbox_valueChange_17_listener","excludesPartOfName","AdminTenantOptionsPasswordPolicyComponent_Template_app_checkbox_valueChange_20_listener","excludesPartOfEmailUserName","AdminTenantOptionsPasswordPolicyComponent_Template_app_checkbox_valueChange_23_listener","excludesPartOfEmailDomain","ɵɵpropertyInterpolate","ɵɵpipeBind1","RouterModule","AdminTenantOptionsComponent","routes","path","component","AdminTenantOptionsRoutingModule","forChild","imports","exports","routedComponents","HydraApiService","NgxSmartModalService","SpinnerStateService","ToastrService","Feature","ɵɵtext","ɵɵtextInterpolate1","ctx_r2","tenantDetails","options","singleSignOnServiceUrl","idpPartnerCertificates","AdminTenantOptionsComponent_div_3_div_16_Template_button_click_4_listener","_r4","onEditDocumentLimits","AdminTenantOptionsComponent_div_3_div_85_Template_button_click_4_listener","_r5","onEditMeasurementSettings","measurementUnit","tedOptions","AdminTenantOptionsComponent_div_3_Template_button_click_10_listener","_r2","onEditAuthentication","AdminTenantOptionsComponent_div_3_ul_13_Template","AdminTenantOptionsComponent_div_3_ul_14_Template","AdminTenantOptionsComponent_div_3_ul_15_Template","AdminTenantOptionsComponent_div_3_div_16_Template","AdminTenantOptionsComponent_div_3_Template_button_click_21_listener","onEditPasswordPolicy","AdminTenantOptionsComponent_div_3_div_85_Template","ɵɵpureFunction0","_c0","panelScroll_r6","showDocumentLimits","ɵɵtextInterpolate","showMeasurementSettings","optionsErrors","AdminTenantOptionsComponent_app_admin_tenant_options_authentication_11_Template_app_admin_tenant_options_authentication_fieldChanged_0_listener","_r7","authenticationChanged","tenantoptionsauthentication_r8","getData","documentLimitsErrors","AdminTenantOptionsComponent_app_admin_tenant_options_document_limits_26_Template_app_admin_tenant_options_document_limits_fieldChanged_0_listener","_r9","documentLimitsChanged","tenantoptionsdocumentlimits_r10","passwordPolicyErrors","AdminTenantOptionsComponent_app_admin_tenant_options_password_policy_41_Template_app_admin_tenant_options_password_policy_fieldChanged_0_listener","_r11","passwordPolicyChanged","tenantoptionspasswordpolicy_r12","AdminTenantOptionsComponent_app_admin_tenant_options_measurement_settings_56_Template_app_admin_tenant_options_measurement_settings_fieldChanged_0_listener","_r13","measurementSettingsChanged","tenantoptionsmeasurementsettings_r14","partnerCertificates","length","certificatesNames","i","fileName","hydraApi","ngxSmartModalService","spinnerService","toastrService","measurementSettingsErrors","tenantoptionsdocumentlimitsModalClosed","tenantDetailsLoaded","td","updateExpireUnits","tenantDetailsLoadFailed","error","setModalData","authenticationModal","open","saveAuthentication","data","getModalData","updateTenantOptions","authenticationUpdated","authenticationUpdateFailed","show","document","getElementById","result","hide","success","userProfile","close","errors","forEach","checkFieldChanged","onAuthenticationModalClosed","cancelAuthentication","documentLimitsModal","saveDocumentLimits","updateDocumentLimits","documentLimitsUpdated","documentLimitsUpdateFailed","onDocumentLimitModalClosed","cancelDocumentLimits","measurementSettingsModal","savePasswordPolicy","updatePasswordPolicy","passwordPolicyUpdated","passwordPolicyUpdateFailed","passwordPolicyModal","onPasswordPolicyModalClosed","cancelPasswordPolicy","saveMeasurementSettings","updateOlcUserDefaultUnit","measurementSettingsUpdated","measurementSettingsUpdateFailed","onMeasurementSettingsModalClosed","cancelMeasurementSettings","hasFeature","Capture","OLCTED","getTenantDetails","ngAfterViewInit","getModal","i3","i4","i5","i6","AdminTenantOptionsComponent_Template","AdminTenantOptionsComponent_div_3_Template","AdminTenantOptionsComponent_Template_ngx_smart_modal_onClose_4_listener","AdminTenantOptionsComponent_app_errors_10_Template","AdminTenantOptionsComponent_app_admin_tenant_options_authentication_11_Template","AdminTenantOptionsComponent_Template_button_click_13_listener","AdminTenantOptionsComponent_Template_button_click_16_listener","AdminTenantOptionsComponent_Template_ngx_smart_modal_onClose_19_listener","AdminTenantOptionsComponent_app_errors_25_Template","AdminTenantOptionsComponent_app_admin_tenant_options_document_limits_26_Template","AdminTenantOptionsComponent_Template_button_click_28_listener","AdminTenantOptionsComponent_Template_button_click_31_listener","AdminTenantOptionsComponent_Template_ngx_smart_modal_onClose_34_listener","AdminTenantOptionsComponent_app_errors_40_Template","AdminTenantOptionsComponent_app_admin_tenant_options_password_policy_41_Template","AdminTenantOptionsComponent_Template_button_click_43_listener","AdminTenantOptionsComponent_Template_button_click_46_listener","AdminTenantOptionsComponent_Template_ngx_smart_modal_onClose_49_listener","AdminTenantOptionsComponent_app_errors_55_Template","AdminTenantOptionsComponent_app_admin_tenant_options_measurement_settings_56_Template","AdminTenantOptionsComponent_Template_button_click_58_listener","AdminTenantOptionsComponent_Template_button_click_61_listener","hasData","CommonModule","TranslateModule","NgxSmartModalModule","PageModule","ModalHeaderModule","FieldsModule","AutoFocusFirstInputModule","CheckboxModule","LabelModule","AutoUpdatePerfectScrollModule","ComponentsModule","PerfectScrollbarModule","SAMLOptionsModule","AdminTenantOptionsModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}