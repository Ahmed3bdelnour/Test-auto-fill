{"version":3,"file":"src_app_views_admin-classifier-formtype_admin-classifier-formtype_module_ts.js","mappings":"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","sources":["./src/app/views/admin-classifier-formtype/admin-classifier-formtype-routing.module.ts","./src/app/views/admin-classifier-formtype/admin-classifier-formtype.component.ts","./src/app/views/admin-classifier-formtype/admin-classifier-formtype.component.html","./src/app/views/admin-classifier-formtype/admin-classifier-formtype.module.ts","./src/app/views/admin-classifier-formtype/formtype-documents/formtype-documents.component.ts","./src/app/views/admin-classifier-formtype/formtype-documents/formtype-documents.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminClassifierFormTypeComponent } from './admin-classifier-formtype.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'create/:product/:folderid/:workflowid/:workflowstepid',\r\n    component: AdminClassifierFormTypeComponent,\r\n    data: { type: 'create' },\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: ':product/:folderid/:workflowid/:workflowstepid/:formtypeid',\r\n    component: AdminClassifierFormTypeComponent,\r\n    data: { type: 'properties' },\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminClassifierFormTypeRoutingModule {}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Data, Params, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { FieldDefinition, MetaDataType, Tab } from 'shared-code-lib';\r\nimport { ClassifierFormType } from '../../blocks/models/classifier-form-type';\r\nimport { ErrorsService } from '../../blocks/services/errors.service';\r\nimport { HydraApiService } from '../../blocks/services/hydra-api.service';\r\nimport { ApiResult, Control } from '../../blocks/services/models';\r\nimport { SpinnerStateService } from '../../blocks/services/spinner-state.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-classifier-formtype',\r\n  templateUrl: './admin-classifier-formtype.component.html',\r\n  styleUrls: ['./admin-classifier-formtype.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminClassifierFormTypeComponent implements OnInit {\r\n  rightControls: Array<Control> = [];\r\n  formType: FieldDefinition;\r\n  saveButton: Control;\r\n  closeButton: Control;\r\n  activeTab = 'documents';\r\n  tabs = new Array<Tab>();\r\n  formTypeDocuments: Array<string> = [];\r\n\r\n  routeParams: Params;\r\n  routeData: Data;\r\n  subscriptions = new Subscription();\r\n  classifierFormType: ClassifierFormType = new ClassifierFormType();\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private hydraApi: HydraApiService,\r\n    private toastr: ToastrService,\r\n    private errorsService: ErrorsService,\r\n    private spinner: SpinnerStateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createButtons();\r\n    this.createFields();\r\n    this.createTabs();\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.route.params, this.route.data]).subscribe(([params, data]) => {\r\n        this.routeParams = params;\r\n        this.routeData = data;\r\n        this.loadFormType();\r\n      })\r\n    );\r\n  }\r\n\r\n  private createButtons() {\r\n    this.saveButton = new Control(this.onSave, 'Save', 'btn btn-primary btn-minwidth', '', '', 'btn', false);\r\n    this.closeButton = new Control(this.onClose, 'Close', 'btn btn-light btn-minwidth', '', '', 'btn', false);\r\n    this.rightControls.push(this.saveButton);\r\n    this.rightControls.push(this.closeButton);\r\n\r\n    this.translateService.get('Metadata.Save').subscribe((res) => {\r\n      this.saveButton.updateLabel(res);\r\n    });\r\n    this.translateService.get('Metadata.Cancel').subscribe((res) => {\r\n      this.closeButton.setTranslation(res);\r\n    });\r\n  }\r\n\r\n  private createFields = () => {\r\n    this.formType = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('admin-classifier-formtype.formtype'),\r\n      placeholder: this.translateService.instant('admin-classifier-formtype.formtype'),\r\n      required: true,\r\n    });\r\n  };\r\n\r\n  private createTabs = () => {\r\n    this.tabs.push(new Tab('documents', this.translateService.instant('admin-classifier-formtype.documents')));\r\n  };\r\n\r\n  activateTab = (view) => {\r\n    this.activeTab = view;\r\n  };\r\n\r\n  onSave = () => {\r\n    this.classifierFormType.workflowId = this.routeParams.workflowid;\r\n    this.classifierFormType.workflowStepId = this.routeParams.workflowstepid;\r\n\r\n    if (this.classifierFormType.id) {\r\n      this.hydraApi.updateClassifierFormType(\r\n        this.classifierFormType,\r\n        this.classifierFormTypeSaved,\r\n        this.classifierFormTypeSaveFailed\r\n      );\r\n    } else {\r\n      this.hydraApi.createClassifierFormType(\r\n        this.classifierFormType,\r\n        this.classifierFormTypeSaved,\r\n        this.classifierFormTypeSaveFailed\r\n      );\r\n    }\r\n\r\n    this.spinner.showSavingSpinner();\r\n  };\r\n\r\n  onClose = () => {\r\n    this.returnToGrid();\r\n  };\r\n\r\n  classifierFormTypeSaved = (result: ApiResult) => {\r\n    if (result.success) {\r\n      this.toastr.success(this.translateService.instant('admin-classifier-formtype.saved'));\r\n      this.spinner.hide();\r\n      this.returnToGrid();\r\n    } else {\r\n      this.spinner.hide();\r\n      this.errorsService.showErrorsModal(result.errors, 'admin-classifier-formtype.validation-errors');\r\n    }\r\n  };\r\n\r\n  classifierFormTypeSaveFailed = (err: any) => {\r\n    this.spinner.hide();\r\n    this.toastr.error(this.translateService.instant('admin-classifier-formtype.save-failed'));\r\n  };\r\n\r\n  private loadFormType = () => {\r\n    if (this.routeData.type === 'properties') {\r\n      this.spinner.hide();\r\n      this.hydraApi.getClassifierFormType(this.routeParams.formtypeid, this.formTypeLoaded, this.loadFailed);\r\n      return;\r\n    }\r\n\r\n    const formType = new ClassifierFormType();\r\n\r\n    this.formTypeLoaded(formType);\r\n  };\r\n\r\n  private loadFailed = (err: any) => {\r\n    console.log(err);\r\n  };\r\n\r\n  private formTypeLoaded = (f: ClassifierFormType) => {\r\n    this.classifierFormType = f;\r\n  };\r\n\r\n  returnToGrid = () => {\r\n    this.router.navigate(['..'], { relativeTo: this.route });\r\n\r\n    this.router.navigateByUrl(\r\n      `settings/${this.routeParams.product}/${this.routeParams.folderid}@${this.routeParams.workflowid}^${this.routeParams.workflowstepid}`\r\n    );\r\n  };\r\n}\r\n","<div\r\n  class=\"admin-classifier-formtype project-list-dashboard-body d-flex flex-column min-h-fit-content h-100\"\r\n  appAutoFocusFirstInput\r\n>\r\n  <app-secondary-header [headerText]=\"'admin-classifier-formtype.header-text' | translate\" [rightControls]=\"rightControls\">\r\n  </app-secondary-header>\r\n\r\n  <div class=\"container-fluid col min-h-fit-content\" id=\"spinnerPanel\">\r\n    <div class=\"panel h-100 row m-0 min-h-fit-content\">\r\n      <div class=\"col-12 col-md-3 properties-panel\">\r\n        <div class=\"col p-0\">\r\n          <app-field [field]=\"formType\" [(value)]=\"classifierFormType.name\"></app-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-9 panel p-0 border-bottom-0 d-flex flex-column min-h-fit-content h-100\">\r\n        <div class=\"panel-wrapper vcenter\">\r\n          <div class=\"col panel-header\">\r\n            {{ 'admin-device.additional-properties' | translate }}\r\n          </div>\r\n        </div>\r\n\r\n        <app-tab-bar [tabs]=\"tabs\" (tabSelected)=\"activateTab($event)\"></app-tab-bar>\r\n\r\n        \r\n        <div class=\"tab-content content-padding col pt-2\" fxFlex=\"auto\" [perfectScrollbar]=\"{}\">\r\n          <div class=\"h-100\" *ngIf=\"'documents' == activeTab\">\r\n            <app-formtype-documents [(formTypeDocuments)]=\"classifierFormType.documents\" [formTypeId]=\"classifierFormType.id\"></app-formtype-documents>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AdminClassifierFormTypeRoutingModule } from './admin-classifier-formtype-routing.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PageModule } from './../../blocks/page/page.module';\r\nimport { ComponentsModule } from './../../blocks/components/components.module';\r\nimport { AdminClassifierFormTypeComponent } from './admin-classifier-formtype.component';\r\nimport { FormTypeDocumentsComponent } from './formtype-documents/formtype-documents.component';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar-portable';\r\nimport {\r\n  AutoFocusFirstInputModule,\r\n  TabBarModule,\r\n  FieldsModule,\r\n  IconsModule,\r\n  LabelModule,\r\n  PipesModule,\r\n} from 'shared-code-lib';\r\nimport { DirectivesModule } from './../../blocks/directives/directives.module';\r\n\r\n@NgModule({\r\n  declarations: [AdminClassifierFormTypeComponent, FormTypeDocumentsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    PageModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    PerfectScrollbarModule,\r\n    IconsModule,\r\n    AdminClassifierFormTypeRoutingModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    TabBarModule,\r\n    LabelModule,\r\n    IconsModule,\r\n    PipesModule,\r\n    DirectivesModule,\r\n  ],\r\n})\r\nexport class AdminClassifierFormTypeModule { }\r\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { saveAs } from 'file-saver/FileSaver';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DateTime, DelayService } from 'shared-code-lib';\r\nimport { ClassifierTrainingDocument } from '../../../blocks/models/classifier-form-type';\r\nimport { HydraApiService } from '../../../blocks/services/hydra-api.service';\r\nimport { InProgressService } from '../../../blocks/services/in-progress.service';\r\n\r\n@Component({\r\n  selector: 'app-formtype-documents',\r\n  templateUrl: './formtype-documents.component.html',\r\n  styleUrls: ['./formtype-documents.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormTypeDocumentsComponent {\r\n  @Input() formTypeDocuments: Array<ClassifierTrainingDocument> = [];\r\n  @Input() formTypeId: string;\r\n  @Output() formTypeDocumentsChange = new EventEmitter<Array<ClassifierTrainingDocument>>();\r\n\r\n  constructor(\r\n    private delay: DelayService,\r\n    private hydraApi: HydraApiService,\r\n    private translate: TranslateService,\r\n    private toastr: ToastrService,\r\n    private inProgress: InProgressService\r\n  ) {}\r\n\r\n  onRemoveDocument = (index: number): void => {\r\n    this.formTypeDocuments.splice(index, 1);\r\n  };\r\n\r\n  onAddDocument = (): void => {\r\n    const fileInput = document.querySelector('#file') as HTMLInputElement;\r\n    fileInput.multiple = true;\r\n    fileInput.click();\r\n  };\r\n\r\n  setFocusToAddedFormType = (): void => {\r\n    const id = `form-type-${this.formTypeDocuments.length - 1}`;\r\n    const lastFormType = document.getElementById(id);\r\n    if (lastFormType) {\r\n      lastFormType.focus();\r\n    }\r\n  };\r\n\r\n  trackByFn(index, item) {\r\n    return index;\r\n  }\r\n\r\n  onFilePickerChange() {\r\n    const fileInput = document.querySelector('#file') as HTMLInputElement;\r\n    const files = Array.from(fileInput.files);\r\n\r\n    for (const file of files) {\r\n      const document = new ClassifierTrainingDocument();\r\n      document.name = file.name;\r\n      document.size = 0;\r\n      document.pageCount = 0;\r\n\r\n      this.readFile(file, document);\r\n\r\n      this.formTypeDocuments.push(document);\r\n    }\r\n\r\n    this.delay.execute(this.setFocusToAddedFormType, 1);\r\n  }\r\n\r\n  emptyInputValue(event) {\r\n    event.target.value = null;\r\n  }\r\n\r\n  readFile = (file: File, document: ClassifierTrainingDocument): void => {\r\n    document.fileBase64 = null;\r\n    const reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      document.fileBase64 = event.target.result.split(',')[1];\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  documentSize = (size: number): string => {\r\n    const kb = 1024;\r\n    if (size === 0) return '';\r\n    if (size < kb) return size + ' B';\r\n\r\n    const kiloBytes = size / 1024;\r\n    return kiloBytes.toFixed(2) + ' KB';\r\n  };\r\n\r\n  documentPageCount = (size: number): string => {\r\n    if (size === 0) return '';\r\n    return size + '';\r\n  };\r\n\r\n  documentDate = (date: DateTime): string => {\r\n    if (!date) return '';\r\n\r\n    return date.toString();\r\n  };\r\n\r\n  downloadFile(fileName: any) {\r\n    this.inProgress.open(this.translate.instant('workitem-properties.downloading-file'));\r\n\r\n    this.hydraApi.getClassifierDocumentStream(\r\n      this.formTypeId,\r\n      fileName,\r\n      (blob) => {\r\n        this.inProgress.close();\r\n        saveAs(blob, `${fileName}`);\r\n      },\r\n      (err) => {\r\n        this.inProgress.close();\r\n        this.toastr.error(this.translate.instant('workitem-properties.download-file-error'));\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"admin-classifier-formtype-properties\">\r\n  <input class=\"d-none\"\r\n         id=\"file\"\r\n         type=\"file\"\r\n         (click)=\"emptyInputValue($event)\"\r\n         (change)=\"onFilePickerChange()\"\r\n         #fileInput />\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <td>{{ 'admin-classifier-formtype.document-name' | translate }}</td>\r\n        <td>{{ 'admin-classifier-formtype.document-page-count' | translate }}</td>\r\n        <td>{{ 'admin-classifier-formtype.document-size' | translate }}</td>\r\n        <td>{{ 'admin-classifier-formtype.document-date-time' | translate }}</td>\r\n        <td class=\"col-width\">\r\n          <button class=\"button-icon\"\r\n                  (click)=\"onAddDocument()\"\r\n                  title=\"{{ 'admin-classifier-formtype.tooltip-add-document' | translate }}\">\r\n            <div class=\"add-circle d-flex justify-content-center align-items-center\">\r\n              <i class=\"icon-plus\"></i>\r\n            </div>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      <tr *ngFor=\"let document of formTypeDocuments; let i = index;trackBy: trackByFn\">\r\n        <td>\r\n          <a *ngIf=\"!document.fileBase64\" class=\"link\" (click)=\"downloadFile(document.name)\">{{ document.name }}</a>\r\n          <app-label *ngIf=\"document.fileBase64\" [text]=\"document.name\"></app-label>\r\n        </td>\r\n        <td>\r\n          <app-label *ngIf=\"!document.fileBase64\" [text]=\"document.pageCount + ''\"></app-label>\r\n        </td>\r\n        <td>\r\n          <app-label *ngIf=\"!document.fileBase64\" [text]=\"documentSize(document.size)\"></app-label>\r\n        </td>\r\n        <td>\r\n          <div *ngIf=\"!document.fileBase64\">{{ documentDate(document.dateAddedUTC) | localDateTimeFormat }}</div>\r\n        </td>\r\n        <td class=\"data-col-width\" title=\"{{ 'admin-classifier-formtype.tooltip-delete-document' | translate }}\">\r\n          <app-delete-icon class=\"form-type-delete-button\"\r\n                           (click)=\"onRemoveDocument(i)\">\r\n          </app-delete-icon>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n </table>\r\n</div>\r\n"],"names":["RouterModule","AdminClassifierFormTypeComponent","routes","path","component","data","type","pathMatch","AdminClassifierFormTypeRoutingModule","forChild","imports","i1","exports","ActivatedRoute","Router","TranslateService","ToastrService","combineLatest","Subscription","FieldDefinition","MetaDataType","Tab","ClassifierFormType","ErrorsService","HydraApiService","Control","SpinnerStateService","i0","ɵɵelementStart","ɵɵtwoWayListener","AdminClassifierFormTypeComponent_div_15_Template_app_formtype_documents_formTypeDocumentsChange_1_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","classifierFormType","documents","ɵɵresetView","ɵɵelementEnd","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","id","constructor","translateService","router","route","hydraApi","toastr","errorsService","spinner","rightControls","activeTab","tabs","Array","formTypeDocuments","subscriptions","createFields","formType","Text","label","instant","placeholder","required","createTabs","push","activateTab","view","onSave","workflowId","routeParams","workflowid","workflowStepId","workflowstepid","updateClassifierFormType","classifierFormTypeSaved","classifierFormTypeSaveFailed","createClassifierFormType","showSavingSpinner","onClose","returnToGrid","result","success","hide","showErrorsModal","errors","err","error","loadFormType","routeData","getClassifierFormType","formtypeid","formTypeLoaded","loadFailed","console","log","f","navigate","relativeTo","navigateByUrl","product","folderid","ngOnInit","createButtons","add","params","subscribe","saveButton","closeButton","get","res","updateLabel","setTranslation","ɵɵdirectiveInject","i2","i3","i4","i5","i6","selectors","decls","vars","consts","template","AdminClassifierFormTypeComponent_Template","rf","ctx","ɵɵelement","AdminClassifierFormTypeComponent_Template_app_field_valueChange_7_listener","name","ɵɵtext","ɵɵlistener","AdminClassifierFormTypeComponent_Template_app_tab_bar_tabSelected_13_listener","ɵɵtemplate","AdminClassifierFormTypeComponent_div_15_Template","ɵɵpipeBind1","ɵɵtextInterpolate1","ɵɵpureFunction0","_c0","CommonModule","FormsModule","TranslateModule","PageModule","ComponentsModule","FormTypeDocumentsComponent","PerfectScrollbarModule","AutoFocusFirstInputModule","TabBarModule","FieldsModule","IconsModule","LabelModule","PipesModule","DirectivesModule","AdminClassifierFormTypeModule","declarations","EventEmitter","saveAs","DelayService","ClassifierTrainingDocument","InProgressService","FormTypeDocumentsComponent_tr_24_a_2_Template_a_click_0_listener","_r3","document_r4","$implicit","ctx_r4","downloadFile","ɵɵtextInterpolate","pageCount","documentSize","size","documentDate","dateAddedUTC","FormTypeDocumentsComponent_tr_24_a_2_Template","FormTypeDocumentsComponent_tr_24_app_label_3_Template","FormTypeDocumentsComponent_tr_24_app_label_5_Template","FormTypeDocumentsComponent_tr_24_app_label_7_Template","FormTypeDocumentsComponent_tr_24_div_9_Template","FormTypeDocumentsComponent_tr_24_Template_app_delete_icon_click_12_listener","i_r6","_r2","index","onRemoveDocument","fileBase64","ɵɵpropertyInterpolate","delay","translate","inProgress","formTypeDocumentsChange","splice","onAddDocument","fileInput","document","querySelector","multiple","click","setFocusToAddedFormType","length","lastFormType","getElementById","focus","readFile","file","reader","FileReader","onload","event","target","split","readAsDataURL","kb","kiloBytes","toFixed","documentPageCount","date","toString","trackByFn","item","onFilePickerChange","files","from","execute","emptyInputValue","value","fileName","open","getClassifierDocumentStream","formTypeId","blob","close","inputs","outputs","FormTypeDocumentsComponent_Template","FormTypeDocumentsComponent_Template_input_click_1_listener","FormTypeDocumentsComponent_Template_input_change_1_listener","FormTypeDocumentsComponent_Template_button_click_19_listener","FormTypeDocumentsComponent_tr_24_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}