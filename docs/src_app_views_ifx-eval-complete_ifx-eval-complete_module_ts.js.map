{"version":3,"file":"src_app_views_ifx-eval-complete_ifx-eval-complete_module_ts.js","mappings":"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","sources":["./src/app/views/ifx-eval-complete/ifx-eval-complete-routing.module.ts","./src/app/views/ifx-eval-complete/ifx-eval-complete.component.ts","./src/app/views/ifx-eval-complete/ifx-eval-complete.component.html","./src/app/views/ifx-eval-complete/ifx-eval-complete.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IfxEvalCompleteComponent } from './ifx-eval-complete.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':hashkey',\r\n    component: IfxEvalCompleteComponent,\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class IfxEvalCompleteRoutingModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BrandingService, FieldDefinition, MetaDataType, SessionStorageService } from 'shared-code-lib';\r\nimport { InterFAXService } from '../../blocks/services/interfax.service';\r\nimport { ApiResult } from '../../blocks/services/models';\r\nimport { SpinnerStateService } from '../../blocks/services/spinner-state.service';\r\nimport { AccountRegistrationDetails, CompleteEvaluationModel } from '../../blocks/InterFAX/Models/admin';\r\nimport { SharedDataService } from '../../blocks/services/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-ifx-eval-complete',\r\n  templateUrl: './ifx-eval-complete.component.html',\r\n  styleUrls: ['./ifx-eval-complete.component.scss'],\r\n})\r\nexport class IfxEvalCompleteComponent implements OnInit {\r\n  fieldUsername: FieldDefinition;\r\n  fieldPassword: FieldDefinition;\r\n  fieldConfirmPassword: FieldDefinition;\r\n  fieldCompany: FieldDefinition;\r\n  username = '';\r\n  password = '';\r\n  confirmPassword = '';\r\n  company = '';\r\n  hashKey: string;\r\n  @ViewChild('loginComponent', { static: true })\r\n  loginDiv: ElementRef;\r\n  agreedToTerms = false;\r\n  brandedServiceTermsUrl = '';\r\n  errors = [];\r\n  logoUrl: string;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private interfaxService: InterFAXService,\r\n    private spinnerStateService: SpinnerStateService,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private sessionStorageService: SessionStorageService,\r\n    private sharedDataService: SharedDataService,\r\n    private router: Router,\r\n    private brandingService: BrandingService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.hashKey = params.hashkey;\r\n    });\r\n\r\n    this.interfaxService.getAccountRegistrationDefaults('', this.defaultsLoaded, this.loadFailed);\r\n\r\n    this.fieldUsername = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('IfxEval.Username'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldPassword = new FieldDefinition({\r\n      type: MetaDataType.Password,\r\n      label: this.translateService.instant('IfxEval.Password'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldConfirmPassword = new FieldDefinition({\r\n      type: MetaDataType.Password,\r\n      label: this.translateService.instant('IfxEval.ConfirmPassword'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldCompany = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translateService.instant('IfxEval.Company'),\r\n      required: false,\r\n    });\r\n\r\n    this.logoUrl = this.brandingService.getBrandDetails()?.loginLogoUrl;\r\n  }\r\n\r\n  defaultsLoaded = (ard: AccountRegistrationDetails): void => {\r\n    this.brandedServiceTermsUrl = ard.brandedServiceTermsUrl;\r\n  };\r\n\r\n  loadFailed = (): void => {\r\n    //tbd\r\n  };\r\n\r\n  completeRegisteration() {\r\n    this.errors = [];\r\n    this.spinnerStateService.show(\r\n      this.translateService.instant('IfxEval.CompletingRegistrationProcess'),\r\n      this.loginDiv.nativeElement\r\n    );\r\n    if (this.password !== this.confirmPassword) {\r\n      this.errors = [this.translateService.instant('IfxEval.PasswordMismatch')];\r\n      this.spinnerStateService.hide();\r\n      return;\r\n    }\r\n    this.interfaxService.completeEvaluationAccountSignup(\r\n      new CompleteEvaluationModel(this.hashKey, this.username, this.password, this.company),\r\n      this.completeRegisterationSuccess,\r\n      this.completeRegisterationFail\r\n    );\r\n  }\r\n\r\n  completeRegisterationFail = (err: any) => {\r\n    this.spinnerStateService.hide();\r\n  };\r\n\r\n  completeRegisterationSuccess = (result: ApiResult) => {\r\n    this.errors = [];\r\n    this.spinnerStateService.hide();\r\n    if (result.success) {\r\n      this.toastr.success(this.translateService.instant('IfxEval.RegisterComplete'));\r\n      this.sessionStorageService.setUsername(this.username);\r\n      this.sharedDataService.extraParameters = this.password;\r\n      this.router.navigateByUrl('/login-password?auto=true');\r\n    } else {\r\n      this.errors.push(result.errors);\r\n    }\r\n  };\r\n\r\n  onAgreedToTermsChanged = (agreed: boolean): void => {\r\n    this.agreedToTerms = agreed;\r\n  };\r\n}\r\n","<div class=\"ifx-eval-complete-container\">\r\n  <div id=\"generic\" class=\"h-navbar-content first-active active\">\r\n    <div class=\"container-fluid p-0\">\r\n      <div class=\"sg-box login-cont\">\r\n        <div class=\"row m-0\">\r\n          <div class=\"login-form-cont\">\r\n            <div\r\n              #loginComponent\r\n              class=\"login-box login-box--simple mb-0\"\r\n              [perfectScrollbar]=\"{ suppressScrollX: true }\"\r\n              #scrollbar=\"ngxPerfectScrollbar\"\r\n              [autoUpdatePerfectScroll]=\"scrollbar\"\r\n            >\r\n              <div class=\"login-box__logo-placement\">\r\n                <div class=\"logo-div\">\r\n                  <img src=\"{{ logoUrl }}\" alt=\"\" />\r\n                </div>\r\n                <form class=\"login-form mt-3\">\r\n                  <app-errors [errors]=\"errors\"></app-errors>\r\n                  <div class=\"input-cont\" appAutoFocusFirstInput>\r\n                    <app-field [field]=\"fieldUsername\" [(value)]=\"username\"></app-field>\r\n                  </div>\r\n                  <div class=\"input-cont\">\r\n                    <app-field [field]=\"fieldPassword\" [(value)]=\"password\"></app-field>\r\n                  </div>\r\n                  <div class=\"input-cont\">\r\n                    <app-field [field]=\"fieldConfirmPassword\" [(value)]=\"confirmPassword\"></app-field>\r\n                  </div>\r\n                  <div class=\"input-cont\">\r\n                    <app-field [field]=\"fieldCompany\" [(value)]=\"company\"></app-field>\r\n                  </div>\r\n\r\n                  <app-section-terms\r\n                    (agreed)=\"onAgreedToTermsChanged($event)\"\r\n                    [brandedServiceTermsUrl]=\"brandedServiceTermsUrl\"\r\n                    [showIcon]=\"false\"\r\n                  ></app-section-terms>\r\n\r\n                  <div class=\"mt-3 text-center\">\r\n                    <button\r\n                      id=\"btn-login-next\"\r\n                      class=\"btn btn-primary btn-minwidth\"\r\n                      type=\"button\"\r\n                      [disabled]=\"!agreedToTerms || !username.trim() || !password.trim() || !confirmPassword.trim()\"\r\n                      (click)=\"completeRegisteration()\"\r\n                    >\r\n                      {{ 'IfxEval.Complete' | translate }}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar-portable';\r\nimport { AutoFocusFirstInputModule, ErrorsModule, FieldsModule } from 'shared-code-lib';\r\nimport { AccountComponentsModule } from '../admin-fax-settings/account-components/account-components.module';\r\nimport { DirectivesModule } from './../../blocks/directives/directives.module';\r\nimport { IfxEvalCompleteRoutingModule } from './ifx-eval-complete-routing.module';\r\nimport { IfxEvalCompleteComponent } from './ifx-eval-complete.component';\r\n\r\n@NgModule({\r\n  declarations: [IfxEvalCompleteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    AccountComponentsModule,\r\n    ErrorsModule,\r\n    PerfectScrollbarModule,\r\n    DirectivesModule,\r\n    IfxEvalCompleteRoutingModule,\r\n  ],\r\n})\r\nexport class IfxEvalCompleteModule {}\r\n"],"names":["RouterModule","IfxEvalCompleteComponent","routes","path","component","pathMatch","IfxEvalCompleteRoutingModule","forChild","imports","i1","exports","ElementRef","TranslateService","ActivatedRoute","Router","ToastrService","BrandingService","FieldDefinition","MetaDataType","SessionStorageService","InterFAXService","SpinnerStateService","CompleteEvaluationModel","SharedDataService","constructor","translateService","interfaxService","spinnerStateService","toastr","route","sessionStorageService","sharedDataService","router","brandingService","username","password","confirmPassword","company","agreedToTerms","brandedServiceTermsUrl","errors","defaultsLoaded","ard","loadFailed","completeRegisterationFail","err","hide","completeRegisterationSuccess","result","success","instant","setUsername","extraParameters","navigateByUrl","push","onAgreedToTermsChanged","agreed","ngOnInit","params","subscribe","hashKey","hashkey","getAccountRegistrationDefaults","fieldUsername","type","Text","label","required","fieldPassword","Password","fieldConfirmPassword","fieldCompany","logoUrl","getBrandDetails","loginLogoUrl","completeRegisteration","show","loginDiv","nativeElement","completeEvaluationAccountSignup","i0","ɵɵdirectiveInject","i2","i3","i4","i5","i6","i7","selectors","viewQuery","IfxEvalCompleteComponent_Query","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtwoWayListener","IfxEvalCompleteComponent_Template_app_field_valueChange_15_listener","$event","ɵɵrestoreView","_r1","ɵɵtwoWayBindingSet","ɵɵresetView","IfxEvalCompleteComponent_Template_app_field_valueChange_17_listener","IfxEvalCompleteComponent_Template_app_field_valueChange_19_listener","IfxEvalCompleteComponent_Template_app_field_valueChange_21_listener","ɵɵlistener","IfxEvalCompleteComponent_Template_app_section_terms_agreed_22_listener","IfxEvalCompleteComponent_Template_button_click_24_listener","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c1","scrollbar_r2","ɵɵpropertyInterpolate","ɵɵsanitizeUrl","ɵɵtwoWayProperty","trim","ɵɵtextInterpolate1","ɵɵpipeBind1","CommonModule","TranslateModule","PerfectScrollbarModule","AutoFocusFirstInputModule","ErrorsModule","FieldsModule","AccountComponentsModule","DirectivesModule","IfxEvalCompleteModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}