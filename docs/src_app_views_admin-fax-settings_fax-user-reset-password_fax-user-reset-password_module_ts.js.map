{"version":3,"file":"src_app_views_admin-fax-settings_fax-user-reset-password_fax-user-reset-password_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACyD;AACF;AAC8B;AACT;AACxC;AACoF;AAC3C;AAClC;AACI;AACkC;;;;;;;;;;;;;;;;;;ICCnEc,wDAAA,qBAAmF;;;;IAAjDA,yDAAA,WAAAA,8DAAA,IAAAI,GAAA,EAAAC,MAAA,CAAAC,sBAAA,EAAmC;;;;;IAgBjEN,6DADF,cAA4F,eACvD;IAACA,qDAAA,GAAqB;IAC3DA,2DAD2D,EAAO,EAC5D;;;;IAFmDA,0DAAA,UAAAK,MAAA,CAAAM,kBAAA,CAAkC;IACrDX,wDAAA,GAAqB;IAArBA,iEAAA,MAAAK,MAAA,CAAAS,cAAA,MAAqB;;;;;;IAb3Dd,6DADF,UAA0B,cACN;IAChBA,qDAAA,GACF;;IAAAA,2DAAA,EAAM;IAGJA,6DADF,cAA2B,oBAC+B;IAArBA,+DAAA,yBAAAgB,qFAAAC,MAAA;MAAAjB,4DAAA,CAAAmB,GAAA;MAAA,MAAAd,MAAA,GAAAL,4DAAA;MAAAA,iEAAA,CAAAK,MAAA,CAAAiB,QAAA,EAAAL,MAAA,MAAAZ,MAAA,CAAAiB,QAAA,GAAAL,MAAA;MAAA,OAAAjB,0DAAA,CAAAiB,MAAA;IAAA,EAAoB;IACzDjB,2DAD0D,EAAY,EAChE;IAGJA,6DADF,cAAqB,oBACmD;IAA5BA,+DAAA,yBAAAwB,qFAAAP,MAAA;MAAAjB,4DAAA,CAAAmB,GAAA;MAAA,MAAAd,MAAA,GAAAL,4DAAA;MAAAA,iEAAA,CAAAK,MAAA,CAAAoB,eAAA,EAAAR,MAAA,MAAAZ,MAAA,CAAAoB,eAAA,GAAAR,MAAA;MAAA,OAAAjB,0DAAA,CAAAiB,MAAA;IAAA,EAA2B;IACvEjB,2DADwE,EAAY,EAC9E;IAENA,yDAAA,IAAA2B,yDAAA,kBAA4F;IAK1F3B,6DADF,cAAkD,kBACe;IAAlBA,yDAAA,mBAAA6B,6EAAA;MAAA7B,4DAAA,CAAAmB,GAAA;MAAA,MAAAd,MAAA,GAAAL,4DAAA;MAAA,OAAAA,0DAAA,CAASK,MAAA,CAAAyB,KAAA,EAAO;IAAA,EAAC;IAC5D9B,qDAAA,IACF;;IACFA,2DADE,EAAS,EACL;IACNA,wDAAA,+BAA6E;IAC/EA,2DAAA,EAAM;;;;IArBFA,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,uCACF;IAGaA,wDAAA,GAAuB;IAAvBA,yDAAA,UAAAK,MAAA,CAAA2B,aAAA,CAAuB;IAAChC,+DAAA,UAAAK,MAAA,CAAAiB,QAAA,CAAoB;IAI5CtB,wDAAA,GAA8B;IAA9BA,yDAAA,UAAAK,MAAA,CAAA6B,oBAAA,CAA8B;IAAClC,+DAAA,UAAAK,MAAA,CAAAoB,eAAA,CAA2B;IAGjEzB,wDAAA,EAAwB;IAAxBA,yDAAA,SAAAK,MAAA,CAAAM,kBAAA,CAAwB;IAM1BX,wDAAA,GACF;IADEA,iEAAA,MAAAA,0DAAA,qCACF;IAEmBA,wDAAA,GAAiC;IAAjCA,yDAAA,mBAAAK,MAAA,CAAA8B,cAAA,CAAiC;;;;;IA5BxDnC,6DAPd,aAAsE,aACC,aAC5B,aACA,aACd,aACe,gBAC6D,aACpD;IACrCA,wDAAA,cAA6D;IAC/DA,2DAAA,EAAM;IAINA,yDAFA,KAAAoC,0DAAA,yBAAsE,KAAAC,mDAAA,oBAE5C;IA8BxCrC,2DANY,EAAM,EACF,EACF,EACF,EACF,EACF,EACF;;;;IAnCeA,wDAAA,GAAqB;IAArBA,oEAAA,QAAAK,MAAA,CAAAkC,SAAA,EAAAvC,4DAAA,CAAqB;IAGfA,wDAAA,EAAmB;IAAnBA,yDAAA,UAAAK,MAAA,CAAAoC,YAAA,CAAmB;IAE1BzC,wDAAA,EAAkB;IAAlBA,yDAAA,SAAAK,MAAA,CAAAoC,YAAA,CAAkB;;;ADIhC,MAAOC,6BAA6B;EAqBxCC,YACUC,KAAqB,EACrBC,gBAAkC,EAClCC,YAAiC,EACjCC,eAAgC,EAChCC,MAAc,EACdC,WAA4B,EAC5BC,QAAyB,EACzBC,qBAA4C,EAC5CC,iBAAoC,EACpCC,MAAqB;IATrB,KAAAT,KAAK,GAALA,KAAK;IACL,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,MAAM,GAANA,MAAM;IA7BhB,KAAAC,gBAAgB,GAAG,KAAK;IACxB,KAAAb,YAAY,GAAG,KAAK;IACpB,KAAAnC,sBAAsB,GAAG,EAAE;IAE3B,KAAAK,kBAAkB,GAAG,KAAK;IAC1B,KAAAG,cAAc,GAAG,EAAE;IAEnB,KAAAQ,QAAQ,GAAG,EAAE;IACb,KAAAG,eAAe,GAAG,EAAE;IASpB,KAAA8B,aAAa,GAAG,IAAIhE,+CAAY,EAAE;IAmClC,KAAAiE,0BAA0B,GAAG,MAAW;MACtC,IAAI,CAACF,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACb,YAAY,GAAG,IAAI;MACxB,IAAI,CAACgB,kBAAkB,EAAE;IAC3B,CAAC;IAED,KAAAC,uBAAuB,GAAIC,GAAQ,IAAU;MAC3C,IAAI,CAACL,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACb,YAAY,GAAG,KAAK;MAEzB,IAAI,OAAOkB,GAAG,KAAK,QAAQ,EAAE;QAC3B,IAAI,CAACrD,sBAAsB,GAAGqD,GAAG;MACnC,CAAC,MAAM;QACL,IAAI,CAACrD,sBAAsB,GAAG,IAAI,CAACuC,gBAAgB,CAACe,OAAO,CAAC,+BAA+B,CAAC;MAC9F;IACF,CAAC;IAED,KAAAH,kBAAkB,GAAG,MAAW;MAC9B,IAAI,CAAC,IAAI,CAACI,OAAO,EAAE;MAEnB,IAAI,CAACX,QAAQ,CAACY,4BAA4B,CAAC,IAAI,CAACD,OAAO,EAAE,IAAI,CAACE,uBAAuB,EAAE,IAAI,CAACC,oBAAoB,CAAC;IACnH,CAAC;IAED,KAAAD,uBAAuB,GAAIE,EAAkB,IAAU;MACrD,IAAI,CAAC9B,cAAc,GAAG8B,EAAE;IAC1B,CAAC;IAED,KAAAD,oBAAoB,GAAIL,GAAQ,IAAI;MAClC7D,iDAAG,CAACoE,KAAK,CAAC,6CAA6C,EAAEP,GAAG,CAAC;MAC7D,IAAI,CAACN,MAAM,CAACa,KAAK,CAAC,IAAI,CAACrB,gBAAgB,CAACe,OAAO,CAAC,mCAAmC,CAAC,CAAC;IACvF,CAAC;IAEO,KAAAO,cAAc,GAAG,MAAW;MAClC,IAAI,IAAI,CAACnB,MAAM,CAACoB,GAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAACtB,eAAe,CAACuB,GAAG,CAAC,IAAI,CAAC,CAAC,KACtF,IAAI,IAAI,CAACtB,MAAM,CAACoB,GAAG,CAACC,UAAU,CAAC,4BAA4B,CAAC,EAAE,IAAI,CAACtB,eAAe,CAACuB,GAAG,CAAC,MAAM,CAAC,CAAC,KAC/F,IAAI,IAAI,CAACtB,MAAM,CAACoB,GAAG,CAACC,UAAU,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAACtB,eAAe,CAACuB,GAAG,CAAC,EAAE,CAAC;MAE1F;MACA,IAAI,CAACvB,eAAe,CAACwB,UAAU,EAAE;MACjC,IAAI,IAAI,CAACxB,eAAe,CAACyB,SAAS,EAAE,EAAE;QACpC,IAAI,CAACjC,SAAS,GAAG,gCAAgC,IAAI,CAACQ,eAAe,CAAC0B,GAAG,EAAE,MAAM;MACnF,CAAC,MAAM,IAAI,IAAI,CAAC1B,eAAe,CAAC2B,eAAe,EAAE,EAAEC,YAAY,EAAE;QAC/D,IAAI,CAACpC,SAAS,GAAG,IAAI,CAACQ,eAAe,CAAC2B,eAAe,EAAE,CAACC,YAAY;MACtE,CAAC,MAAM;QACL,IAAI,CAACpC,SAAS,GAAG,kCAAkC;MACrD;IACF,CAAC;IAED,KAAAqC,YAAY,GAAG,MAAW;MACxB,IAAI,CAAC5C,aAAa,GAAG,IAAIvC,4DAAe,CAAC;QACvCoF,IAAI,EAAEnF,yDAAY,CAACoF,QAAQ;QAC3BC,KAAK,EAAE,IAAI,CAAClC,gBAAgB,CAACe,OAAO,CAAC,gBAAgB,CAAC;QACtDoB,QAAQ,EAAE;OACX,CAAC;MAEF,IAAI,CAAC9C,oBAAoB,GAAG,IAAIzC,4DAAe,CAAC;QAC9CoF,IAAI,EAAEnF,yDAAY,CAACoF,QAAQ;QAC3BC,KAAK,EAAE,IAAI,CAAClC,gBAAgB,CAACe,OAAO,CAAC,wBAAwB,CAAC;QAC9DoB,QAAQ,EAAE;OACX,CAAC;IACJ,CAAC;IAED,KAAAlD,KAAK,GAAG,MAAW;MACjB,IAAI,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACG,eAAe,EAAE;QACzC,IAAI,CAACd,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACG,cAAc,GAAG,IAAI,CAAC+B,gBAAgB,CAACe,OAAO,CAAC,6BAA6B,CAAC;QAElF;MACF;MAEA,IAAI,CAACf,gBAAgB,CAAC4B,GAAG,CAAC,yBAAyB,CAAC,CAACQ,SAAS,CAAEC,GAAG,IAAI;QACrE,IAAI,CAACpC,YAAY,CAACqC,IAAI,CAACD,GAAG,EAAEE,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAAC;MAC3E,CAAC,CAAC;MAEF,IAAI,CAACpC,WAAW,CAACqC,aAAa,CAAC,IAAI,CAACzB,OAAO,EAAE,IAAI,CAACvC,QAAQ,EAAE,IAAI,CAACiE,cAAc,EAAE,IAAI,CAACC,WAAW,CAAC;IACpG,CAAC;IAED,KAAAD,cAAc,GAAIE,QAAgB,IAAU;MAC1C,IAAI,CAAC3C,YAAY,CAAC4C,IAAI,EAAE;MACxB,IAAI,CAACrC,MAAM,CAACsC,OAAO,CAAC,IAAI,CAAC9C,gBAAgB,CAACe,OAAO,CAAC,8BAA8B,CAAC,CAAC;MAClF,IAAI,CAACT,qBAAqB,CAACyC,WAAW,CAACH,QAAQ,CAAC;MAChD,IAAI,CAACrC,iBAAiB,CAACyC,eAAe,GAAG,IAAI,CAACvE,QAAQ;MACtD,IAAI,CAAC0B,MAAM,CAAC8C,aAAa,CAAC,2BAA2B,CAAC;IACxD,CAAC;IAED,KAAAN,WAAW,GAAI7B,GAAQ,IAAU;MAC/B,IAAI,CAACb,YAAY,CAAC4C,IAAI,EAAE;MACxB,IAAI,CAAC/E,kBAAkB,GAAG,IAAI;MAE9B,IAAI,OAAOgD,GAAG,KAAK,QAAQ,EAAE;QAC3B,IAAI,CAAC7C,cAAc,GAAG6C,GAAG;MAC3B,CAAC,MAAM;QACL,IAAI,CAAC7C,cAAc,GAAG,IAAI,CAAC+B,gBAAgB,CAACe,OAAO,CAAC,2BAA2B,CAAC;MAClF;IACF,CAAC;EApHE;EAEHmC,QAAQA,CAAA;IACN,IAAI,CAAC5B,cAAc,EAAE;IAErB,IAAI,CAACZ,aAAa,CAACyC,GAAG,CACpB,IAAI,CAACpD,KAAK,CAACqD,WAAW,CAAChB,SAAS,CAAEiB,KAAU,IAAI;MAC9C,IAAI,CAACA,KAAK,CAAC,SAAS,CAAC,EAAE;QACrB,IAAI,CAACxC,uBAAuB,CAAC,IAAI,CAACb,gBAAgB,CAACe,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC5F;MACF;MAEA,IAAI,CAACC,OAAO,GAAGqC,KAAK,CAAC,SAAS,CAAC;MAC/B,IAAI,CAACjD,WAAW,CAACkD,eAAe,CAAC,IAAI,CAACtC,OAAO,EAAE,IAAI,CAACL,0BAA0B,EAAE,IAAI,CAACE,uBAAuB,CAAC;IAC/G,CAAC,CAAC,CACH;IAED,IAAI,CAACH,aAAa,CAACyC,GAAG,CAAC,IAAI,CAACjD,eAAe,CAACqD,qBAAqB,CAACnB,SAAS,CAAC,IAAI,CAACd,cAAc,CAAC,CAAC;IAEjG,IAAI,CAACS,YAAY,EAAE;EACrB;EAkGAyB,WAAWA,CAAA;IACT,IAAI,CAAC9C,aAAa,CAAC+C,WAAW,EAAE;EAClC;;;uCAxJW5D,6BAA6B,EAAA1C,gEAAA,CAAAwG,4DAAA,GAAAxG,gEAAA,CAAAyG,kEAAA,GAAAzG,gEAAA,CAAA0G,uFAAA,GAAA1G,gEAAA,CAAA2G,4DAAA,GAAA3G,gEAAA,CAAAwG,oDAAA,GAAAxG,gEAAA,CAAA4G,8EAAA,GAAA5G,gEAAA,CAAA6G,+EAAA,GAAA7G,gEAAA,CAAA2G,kEAAA,GAAA3G,gEAAA,CAAA8G,mFAAA,GAAA9G,gEAAA,CAAA+G,sDAAA;IAAA;EAAA;;;YAA7BrE,6BAA6B;MAAAsE,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCjB1CtH,yDAAA,IAAAwH,4CAAA,kBAAsE;;;UAAxBxH,yDAAA,SAAAuH,GAAA,CAAAjE,gBAAA,CAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArB;AAEF;AACU;AACD;AACkB;AAClB;AAS7B;AACgG;AACzC;AAClB;AACsB;;;AAEpF,MAAMmF,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEjG,6FAA6B;EACxCkG,SAAS,EAAE;CACZ,CACF;AAMK,MAAOC,sCAAsC;;;uCAAtCA,sCAAsC;IAAA;EAAA;;;YAAtCA;IAAsC;EAAA;;;gBAHvClB,yDAAY,CAACmB,QAAQ,CAACL,MAAM,CAAC,EAC7Bd,yDAAY;IAAA;EAAA;;;sHAEXkB,sCAAsC;IAAAE,OAAA,GAAAvC,yDAAA;IAAAwC,OAAA,GAFvCrB,yDAAY;EAAA;AAAA;AAyBlB,MAAOsB,+BAA+B;;;uCAA/BA,+BAA+B;IAAA;EAAA;;;YAA/BA;IAA+B;EAAA;;;gBAlBxCxB,yDAAY,EACZG,gEAAe,EACfY,gEAAU,EACVD,kFAAgB,EAChBb,uDAAW,EACXG,mFAAsB,EACtBK,wDAAW,EACXD,yDAAY,EACZF,sEAAyB,EACzBM,yDAAY,EACZL,2DAAc,EACdF,iEAAmB,EACnBM,8DAAiB,EACjBD,wDAAW,EACXU,sCAAsC,EACtCP,+GAAoB;IAAA;EAAA;;;sHAGXW,+BAA+B;IAAAC,YAAA,GApB3BxG,6FAA6B;IAAAqG,OAAA,GAE1CtB,yDAAY,EACZG,gEAAe,EACfY,gEAAU,EACVD,kFAAgB,EAChBb,uDAAW,EACXG,mFAAsB,EACtBK,wDAAW,EACXD,yDAAY,EACZF,sEAAyB,EACzBM,yDAAY,EACZL,2DAAc,EACdF,iEAAmB,EACnBM,8DAAiB,EACjBD,wDAAW,EAlBFU,sCAAsC,EAoB/CP,+GAAoB;EAAA;AAAA","sources":["./src/app/views/admin-fax-settings/fax-user-reset-password/fax-user-reset-password.component.ts","./src/app/views/admin-fax-settings/fax-user-reset-password/fax-user-reset-password.component.html","./src/app/views/admin-fax-settings/fax-user-reset-password/fax-user-reset-password.module.ts"],"sourcesContent":["import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SpinnerStateService } from '../../../blocks/services/spinner-state.service';\r\nimport { InterFAXService } from '../../../blocks/services/interfax.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { BrandingService, FieldDefinition, MetaDataType, PasswordPolicy, SessionStorageService } from 'shared-code-lib';\r\nimport { HydraApiService } from '../../../blocks/services/hydra-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Log } from '../../../blocks/core/log';\r\nimport { SharedDataService } from '../../../blocks/services/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-fax-user-reset-password',\r\n  templateUrl: './fax-user-reset-password.component.html',\r\n  styleUrls: ['./fax-user-reset-password.component.scss'],\r\n})\r\nexport class FaxUserResetPasswordComponent implements OnInit, OnDestroy {\r\n  hashkey: string;\r\n  hashkeyValidated = false;\r\n  hashkeyValid = false;\r\n  hashkeyValidationError = '';\r\n\r\n  resetErrorOccurred = false;\r\n  resetErrorText = '';\r\n\r\n  password = '';\r\n  confirmPassword = '';\r\n\r\n  passwordPolicy: PasswordPolicy;\r\n\r\n  logoColor: string;\r\n\r\n  fieldPassword: FieldDefinition;\r\n  fieldConfirmPassword: FieldDefinition;\r\n\r\n  subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private translateService: TranslateService,\r\n    private spinnerState: SpinnerStateService,\r\n    private brandingService: BrandingService,\r\n    private router: Router,\r\n    private interfaxApi: InterFAXService,\r\n    private hydraApi: HydraApiService,\r\n    private sessionStorageService: SessionStorageService,\r\n    private sharedDataService: SharedDataService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.handleBranding();\r\n\r\n    this.subscriptions.add(\r\n      this.route.queryParams.subscribe((param: any) => {\r\n        if (!param['Hashkey']) {\r\n          this.hashkeyValidationFailed(this.translateService.instant('Login.failed-validate-hashkey'));\r\n          return;\r\n        }\r\n\r\n        this.hashkey = param['Hashkey'];\r\n        this.interfaxApi.validateHashkey(this.hashkey, this.hashkeyValidationSucceeded, this.hashkeyValidationFailed);\r\n      })\r\n    );\r\n\r\n    this.subscriptions.add(this.brandingService.onBrandDetailsUpdated.subscribe(this.handleBranding));\r\n\r\n    this.createFields();\r\n  }\r\n\r\n  hashkeyValidationSucceeded = (): void => {\r\n    this.hashkeyValidated = true;\r\n    this.hashkeyValid = true;\r\n    this.loadPasswordPolicy();\r\n  };\r\n\r\n  hashkeyValidationFailed = (err: any): void => {\r\n    this.hashkeyValidated = true;\r\n    this.hashkeyValid = false;\r\n\r\n    if (typeof err === 'string') {\r\n      this.hashkeyValidationError = err;\r\n    } else {\r\n      this.hashkeyValidationError = this.translateService.instant('Login.failed-validate-hashkey');\r\n    }\r\n  };\r\n\r\n  loadPasswordPolicy = (): void => {\r\n    if (!this.hashkey) return;\r\n\r\n    this.hydraApi.getPasswordPolicyByResetCode(this.hashkey, this.passwordPolicySucceeded, this.passwordPolicyFailed);\r\n  };\r\n\r\n  passwordPolicySucceeded = (pp: PasswordPolicy): void => {\r\n    this.passwordPolicy = pp;\r\n  };\r\n\r\n  passwordPolicyFailed = (err: any) => {\r\n    Log.error('ResetPasswordComponent.passwordPolicyFailed', err);\r\n    this.toastr.error(this.translateService.instant('Login.password-policy-load-failed'));\r\n  };\r\n\r\n  private handleBranding = (): void => {\r\n    if (this.router.url.startsWith('/mobile-ar-set-password/')) this.brandingService.set('ar');\r\n    else if (this.router.url.startsWith('/mobile-hpcr-set-password/')) this.brandingService.set('hpcr');\r\n    else if (this.router.url.startsWith('/mobile-set-password/')) this.brandingService.set('');\r\n\r\n    //set PWA data for brand\r\n    this.brandingService.setPWAData();\r\n    if (this.brandingService.isBranded()) {\r\n      this.logoColor = `assets/shared/img/logo-color-${this.brandingService.get()}.svg`;\r\n    } else if (this.brandingService.getBrandDetails()?.loginLogoUrl) {\r\n      this.logoColor = this.brandingService.getBrandDetails().loginLogoUrl;\r\n    } else {\r\n      this.logoColor = 'assets/shared/img/logo-color.svg';\r\n    }\r\n  };\r\n\r\n  createFields = (): void => {\r\n    this.fieldPassword = new FieldDefinition({\r\n      type: MetaDataType.Password,\r\n      label: this.translateService.instant('Login.password'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldConfirmPassword = new FieldDefinition({\r\n      type: MetaDataType.Password,\r\n      label: this.translateService.instant('Login.confirm-password'),\r\n      required: true,\r\n    });\r\n  };\r\n\r\n  reset = (): void => {\r\n    if (this.password != this.confirmPassword) {\r\n      this.resetErrorOccurred = true;\r\n      this.resetErrorText = this.translateService.instant('Login.passwords-donot-match');\r\n\r\n      return;\r\n    }\r\n\r\n    this.translateService.get('Login.ResettingPassword').subscribe((res) => {\r\n      this.spinnerState.show(res, document.getElementById('app-spinner-panel'));\r\n    });\r\n\r\n    this.interfaxApi.resetPassword(this.hashkey, this.password, this.resetSucceeded, this.resetFailed);\r\n  };\r\n\r\n  resetSucceeded = (userName: string): void => {\r\n    this.spinnerState.hide();\r\n    this.toastr.success(this.translateService.instant('Login.ResetPasswordConfirmed'));\r\n    this.sessionStorageService.setUsername(userName);\r\n    this.sharedDataService.extraParameters = this.password;\r\n    this.router.navigateByUrl('/login-password?auto=true');\r\n  };\r\n\r\n  resetFailed = (err: any): void => {\r\n    this.spinnerState.hide();\r\n    this.resetErrorOccurred = true;\r\n\r\n    if (typeof err === 'string') {\r\n      this.resetErrorText = err;\r\n    } else {\r\n      this.resetErrorText = this.translateService.instant('Login.ResetPasswordFailed');\r\n    }\r\n  };\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"reset-password inner-body h-100\" *ngIf=\"hashkeyValidated\">\r\n  <div id=\"generic\" class=\"h-navbar-content first-active active h-100\">\r\n    <div class=\"container-fluid h-100 p-0\">\r\n      <div class=\"sg-box login-cont h-100\">\r\n        <div class=\"row m-0\">\r\n          <div class=\"login-form-cont mt-0\">\r\n            <div class=\"login-box login-box--simple mb-0\" #resetPasswordComponent appAutoFocusFirstInput>\r\n              <div class=\"login-box__logo-placement\">\r\n                <img src=\"{{ logoColor }}\" width=\"476\" height=\"147\" alt=\"\" />\r\n              </div>\r\n\r\n              <app-errors *ngIf=\"!hashkeyValid\" [errors]=\"[hashkeyValidationError]\"></app-errors>\r\n\r\n              <div *ngIf=\"hashkeyValid\">\r\n                <div class=\"m-10\">\r\n                  {{ 'Login.ResetPasswordHelp' | translate }}\r\n                </div>\r\n\r\n                <div class=\"col p-0 pt-10\">\r\n                  <app-field [field]=\"fieldPassword\" [(value)]=\"password\"></app-field>\r\n                </div>\r\n\r\n                <div class=\"col p-0\">\r\n                  <app-field [field]=\"fieldConfirmPassword\" [(value)]=\"confirmPassword\"></app-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"resetErrorOccurred\" style=\"margin-top: 20px\" [class.error]=\"resetErrorOccurred\">\r\n                  <span class=\"form-label p-10 ml-1\"> {{ resetErrorText }} </span>\r\n                </div>\r\n\r\n                <div class=\"text-center\" style=\"margin-top: 20px\">\r\n                  <button class=\"btn btn-primary btn-minwidth\" (click)=\"reset()\">\r\n                    {{ 'Login.ResetPassword' | translate }}\r\n                  </button>\r\n                </div>\r\n                <app-password-policy [passwordPolicy]=\"passwordPolicy\"></app-password-policy>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar-portable';\r\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\r\nimport {\r\n  AutoFocusFirstInputModule,\r\n  CheckboxModule,\r\n  FieldsModule,\r\n  IconsModule,\r\n  LabelModule,\r\n  ModalHeaderModule,\r\n  TabBarModule,\r\n} from 'shared-code-lib';\r\nimport { PasswordPolicyModule } from '../../../../../../../Bamba.Shared/src/auth/password-policy/password-policy.module';\r\nimport { ComponentsModule } from '../../../blocks/components/components.module';\r\nimport { PageModule } from '../../../blocks/page/page.module';\r\nimport { FaxUserResetPasswordComponent } from './fax-user-reset-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FaxUserResetPasswordComponent,\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminFaxUserResetPasswordRoutingModule {}\r\n\r\n@NgModule({\r\n  declarations: [FaxUserResetPasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    PageModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    PerfectScrollbarModule,\r\n    IconsModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    TabBarModule,\r\n    CheckboxModule,\r\n    NgxSmartModalModule,\r\n    ModalHeaderModule,\r\n    LabelModule,\r\n    AdminFaxUserResetPasswordRoutingModule,\r\n    PasswordPolicyModule,\r\n  ],\r\n})\r\nexport class AdminFaxUserResetPasswordModule {}\r\n"],"names":["ActivatedRoute","Router","TranslateService","SpinnerStateService","InterFAXService","Subscription","BrandingService","FieldDefinition","MetaDataType","SessionStorageService","HydraApiService","ToastrService","Log","SharedDataService","i0","ɵɵelement","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","hashkeyValidationError","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","resetErrorOccurred","ɵɵadvance","ɵɵtextInterpolate1","resetErrorText","ɵɵtwoWayListener","FaxUserResetPasswordComponent_div_0_div_11_Template_app_field_valueChange_5_listener","$event","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","password","ɵɵresetView","FaxUserResetPasswordComponent_div_0_div_11_Template_app_field_valueChange_7_listener","confirmPassword","ɵɵtemplate","FaxUserResetPasswordComponent_div_0_div_11_div_8_Template","ɵɵlistener","FaxUserResetPasswordComponent_div_0_div_11_Template_button_click_10_listener","reset","ɵɵpipeBind1","fieldPassword","ɵɵtwoWayProperty","fieldConfirmPassword","passwordPolicy","FaxUserResetPasswordComponent_div_0_app_errors_10_Template","FaxUserResetPasswordComponent_div_0_div_11_Template","ɵɵpropertyInterpolate","logoColor","ɵɵsanitizeUrl","hashkeyValid","FaxUserResetPasswordComponent","constructor","route","translateService","spinnerState","brandingService","router","interfaxApi","hydraApi","sessionStorageService","sharedDataService","toastr","hashkeyValidated","subscriptions","hashkeyValidationSucceeded","loadPasswordPolicy","hashkeyValidationFailed","err","instant","hashkey","getPasswordPolicyByResetCode","passwordPolicySucceeded","passwordPolicyFailed","pp","error","handleBranding","url","startsWith","set","setPWAData","isBranded","get","getBrandDetails","loginLogoUrl","createFields","type","Password","label","required","subscribe","res","show","document","getElementById","resetPassword","resetSucceeded","resetFailed","userName","hide","success","setUsername","extraParameters","navigateByUrl","ngOnInit","add","queryParams","param","validateHashkey","onBrandDetailsUpdated","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","i2","i3","i4","i5","i6","i7","i8","selectors","decls","vars","consts","template","FaxUserResetPasswordComponent_Template","rf","ctx","FaxUserResetPasswordComponent_div_0_Template","CommonModule","FormsModule","RouterModule","TranslateModule","PerfectScrollbarModule","NgxSmartModalModule","AutoFocusFirstInputModule","CheckboxModule","FieldsModule","IconsModule","LabelModule","ModalHeaderModule","TabBarModule","PasswordPolicyModule","ComponentsModule","PageModule","routes","path","component","pathMatch","AdminFaxUserResetPasswordRoutingModule","forChild","imports","exports","AdminFaxUserResetPasswordModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}