{"version":3,"file":"src_app_views_admin-olc_media_media_module_ts.js","mappings":"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","sources":["./src/app/views/admin-olc/media/media-routing.module.ts","./src/app/views/admin-olc/media/media.component.ts","./src/app/views/admin-olc/media/media.component.html","./src/app/views/admin-olc/media/media.module.ts","./src/app/views/admin-olc/media/properties-form/properties-form.component.ts","./src/app/views/admin-olc/media/properties-form/properties-form.component.html","./src/app/views/admin-olc/media/properties-media/properties-media.component.ts","./src/app/views/admin-olc/media/properties-media/properties-media.component.html","./src/app/views/admin-olc/media/properties-roles/properties-roles.component.ts","./src/app/views/admin-olc/media/properties-roles/properties-roles.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MediaComponent } from './media.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'duplicate/:mediaId',\r\n    component: MediaComponent,\r\n    data: { type: 'duplicate' },\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: ':mediaId',\r\n    component: MediaComponent,\r\n    data: { type: 'properties' },\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MediaRoutingModule {}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { FieldDefinition } from '../../../../../../../Bamba.Shared/src/models/field-definition';\r\nimport { MetaDataType } from '../../../../../../../Bamba.Shared/src/models/metadata-definition';\r\nimport { ErrorsService } from '../../../blocks/services/errors.service';\r\nimport { HydraApiService } from '../../../blocks/services/hydra-api.service';\r\nimport { ApiResult, Control } from '../../../blocks/services/models';\r\nimport { SpinnerStateService } from '../../../blocks/services/spinner-state.service';\r\nimport { Media } from '../models/media';\r\n\r\n@Component({\r\n  selector: 'app-olc-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MediaComponent implements OnInit, OnDestroy {\r\n  rightControls: Array<Control> = [];\r\n  fieldName: FieldDefinition;\r\n  fieldSlug: FieldDefinition;\r\n  media: Media;\r\n  mediaId = '';\r\n  routeDataType: string;\r\n\r\n  subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private hydraApi: HydraApiService,\r\n    private route: ActivatedRoute,\r\n    private errorsService: ErrorsService,\r\n    private spinner: SpinnerStateService,\r\n    private toastr: ToastrService,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createButtons();\r\n    this.createFields();\r\n    this.getMediaData();\r\n  }\r\n\r\n  getMediaData() {\r\n    this.subscriptions.add(\r\n      combineLatest([this.route.params, this.route.data]).subscribe(([params, data]) => {\r\n        this.mediaId = params.mediaId;\r\n        this.routeDataType = data.type;\r\n\r\n        if (['properties', 'duplicate'].includes(this.routeDataType)) {\r\n          this.spinner.show(this.translate.instant('Common.Loading'), document.documentElement);\r\n          this.hydraApi.getOLCMedia(this.mediaId, this.mediaLoaded, this.mediaLoadFailed);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private mediaLoaded = (m: Media) => {\r\n    if (this.routeDataType === 'duplicate') {\r\n      m.name = `${this.translate.instant('Admin.CopyOf')} ${m.name}`;\r\n      m.id = '';\r\n    }\r\n\r\n    this.media = m;\r\n    this.spinner.hide();\r\n  };\r\n\r\n  private mediaLoadFailed = () => {\r\n    this.toastr.error(this.translate.instant('admin-olc-media.media-load-failed'));\r\n    this.spinner.hide();\r\n  };\r\n\r\n  private createFields = () => {\r\n    this.fieldName = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translate.instant('admin-olc-media.name'),\r\n      placeholder: this.translate.instant('admin-olc-media.name-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldSlug = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translate.instant('admin-olc-media.slug'),\r\n      placeholder: this.translate.instant('admin-olc-media.slug-placeholder'),\r\n      required: false,\r\n    });\r\n  };\r\n\r\n  private createButtons() {\r\n    const saveButton = new Control(\r\n      this.onSave,\r\n      this.translate.instant('admin-olc-media.save'),\r\n      'btn btn-primary btn-minwidth',\r\n      '',\r\n      '',\r\n      'btn',\r\n      false\r\n    );\r\n\r\n    const cancelButton = new Control(\r\n      this.onCancel,\r\n      this.translate.instant('admin-olc-media.cancel'),\r\n      'btn btn-light btn-minwidth',\r\n      '',\r\n      '',\r\n      'btn',\r\n      false\r\n    );\r\n\r\n    this.rightControls.push(saveButton);\r\n    this.rightControls.push(cancelButton);\r\n  }\r\n\r\n  onSave = () => {\r\n    this.spinner.showSavingSpinner();\r\n\r\n    if (this.media.id) {\r\n      this.hydraApi.updateOLCMedia(this.media, this.mediaSaved, this.mediaSaveFailed);\r\n    } else {\r\n      this.hydraApi.duplicateMedia(this.mediaId, this.media, this.mediaSaved, this.mediaSaveFailed);\r\n    }\r\n  };\r\n\r\n  onCancel = () => {\r\n    this.returnToGrid();\r\n  };\r\n\r\n  mediaSaved = (result: ApiResult) => {\r\n    if (result.success) {\r\n      this.toastr.success(this.translate.instant('admin-olc-media.media-saved'));\r\n      this.returnToGrid();\r\n    } else {\r\n      this.errorsService.showErrorsModal(result.errors, 'admin-olc-media.media-validation-errors');\r\n    }\r\n\r\n    this.spinner.hide();\r\n  };\r\n\r\n  mediaSaveFailed = () => {\r\n    this.toastr.error(this.translate.instant('admin-olc-media.media-save-failed'));\r\n    this.spinner.hide();\r\n  };\r\n\r\n  returnToGrid = () => this.location.back();\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"media\" class=\"admin-olc-media d-flex flex-column\" appAutoFocusFirstInput [focusDelay]=\"5\">\r\n  <app-secondary-header [headerText]=\"'admin-olc-media.HeadText' | translate\" [rightControls]=\"rightControls\">\r\n  </app-secondary-header>\r\n  <div class=\"container-fluid col min-h-fit-content\">\r\n    <div class=\"row panel min-h-fit-content h-100 m-0\" id=\"spinnerPanel\">\r\n      <div class=\"col-12 col-md-3 properties-panel\">\r\n        <app-created-modified\r\n          [id]=\"media.id\"\r\n          [createdDate]=\"media.dateCreatedUTC\"\r\n          [modifiedDate]=\"media.dateModifiedUTC\"\r\n        ></app-created-modified>\r\n\r\n        <div class=\"col p-0\">\r\n          <app-field [field]=\"fieldName\" [(value)]=\"media.name\"></app-field>\r\n        </div>\r\n\r\n        <div class=\"col p-0\">\r\n          <app-field [field]=\"fieldSlug\" [(value)]=\"media.slug\"></app-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-9 p-0 step-panel d-flex flex-column\">\r\n        <div class=\"step-panel-wrapper vcenter\">\r\n          <div class=\"col step-panel-header\">\r\n            {{ 'admin-olc-media.properties' | translate }}\r\n          </div>\r\n        </div>\r\n\r\n        <app-properties-form class=\"d-flex flex-column col p-0\" [media]=\"media\"></app-properties-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MediaComponent } from './media.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AutoFocusFirstInputModule, CheckboxModule, FieldsModule, TabBarModule } from 'shared-code-lib';\r\nimport { MediaRoutingModule } from './media-routing.module';\r\nimport { PageModule } from '../../../blocks/page/page.module';\r\nimport { ComponentsModule } from '../../../blocks/components/components.module';\r\nimport { PropertiesFormComponent } from './properties-form/properties-form.component';\r\nimport { PropertiesMediaComponent } from './properties-media/properties-media.component';\r\nimport { PropertiesRolesComponent } from './properties-roles/properties-roles.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MediaRoutingModule,\r\n    TranslateModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    TabBarModule,\r\n    PageModule,\r\n    ComponentsModule,\r\n    CheckboxModule,\r\n  ],\r\n  declarations: [MediaComponent, PropertiesFormComponent, PropertiesMediaComponent, PropertiesRolesComponent],\r\n})\r\nexport class MediaModule {}\r\n","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Tab } from 'shared-code-lib';\r\nimport { Media } from '../../models/media';\r\n\r\n@Component({\r\n  selector: 'app-properties-form',\r\n  templateUrl: './properties-form.component.html',\r\n  styleUrls: ['./properties-form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PropertiesFormComponent implements OnInit {\r\n  @Input() media: Media;\r\n\r\n  activeTab = 'general';\r\n  tabs = new Array<Tab>();\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n    this.tabs.push(new Tab('general', this.translateService.instant('admin-olc-media.general')));\r\n    this.onRoleBasedChanged();\r\n  }\r\n\r\n  activateTab = (tab: string) => {\r\n    this.activeTab = tab;\r\n  };\r\n\r\n  onRoleBasedChanged() {\r\n    if (this.media.roleBasedAccess) {\r\n      this.tabs.push(new Tab('roles', this.translateService.instant('admin-olc-media.roles')));\r\n    } else {\r\n      this.tabs.splice(1, 1);\r\n    }\r\n  }\r\n}\r\n","<div class=\"admin-olc-media-properties h-100\">\r\n  <app-tab-bar [tabs]=\"tabs\" (tabSelected)=\"activateTab($event)\"></app-tab-bar>\r\n\r\n  <div class=\"tab-content content-padding h-100\">\r\n    <div class=\"h-100\" *ngIf=\"activeTab === 'general'\">\r\n      <app-properties-media\r\n        class=\"h-100\"\r\n        [media]=\"media\"\r\n        (roleBasedChanged)=\"onRoleBasedChanged()\"\r\n      ></app-properties-media>\r\n    </div>\r\n    <div class=\"h-100\" *ngIf=\"activeTab === 'roles'\">\r\n      <app-properties-roles class=\"h-100\" [media]=\"media\"></app-properties-roles>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Media } from '../../models/media';\r\n\r\n@Component({\r\n  selector: 'app-properties-media',\r\n  templateUrl: './properties-media.component.html',\r\n  styleUrls: ['./properties-media.component.scss'],\r\n})\r\nexport class PropertiesMediaComponent {\r\n  @Input() media: Media;\r\n  @Output() roleBasedChanged = new EventEmitter<boolean>();\r\n\r\n  updateRoleBasedAccess(roleBasedAccess: boolean) {\r\n    this.media.roleBasedAccess = roleBasedAccess;\r\n    this.roleBasedChanged.emit(roleBasedAccess);\r\n  }\r\n}\r\n","<div *ngIf=\"media\" class=\"properties-media\">\r\n  <app-checkbox\r\n    [value]=\"media.roleBasedAccess\"\r\n    (valueChange)=\"updateRoleBasedAccess($event)\"\r\n    label=\"admin-olc-media.role-based-access\"\r\n  ></app-checkbox>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport { HydraApiService } from './../../../../blocks/services/hydra-api.service';\r\nimport { Media } from './../../models/media';\r\nimport { Role } from 'shared-code-lib';\r\n\r\n@Component({\r\n  selector: 'app-properties-roles',\r\n  templateUrl: './properties-roles.component.html',\r\n  styleUrls: ['./properties-roles.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PropertiesRolesComponent implements OnInit {\r\n  @Input() media: Media;\r\n  @Output() roleIdsChange = new EventEmitter<Array<string>>();\r\n\r\n  available: Array<Role> = [];\r\n  current: Array<Role> = [];\r\n\r\n  constructor(private hydraApi: HydraApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadPickListItems();\r\n  }\r\n\r\n  currentChanged = (items: Array<Role>) => {\r\n    this.media.roles = [];\r\n    for (let item of items) {\r\n      this.media.roles.push(item.id);\r\n    }\r\n  };\r\n\r\n  loadPickListItems = () => {\r\n    this.hydraApi.getRoles(this.loaded, this.loadFailed);\r\n  };\r\n\r\n  loaded = (roles: Array<Role>) => {\r\n    this.available = roles;\r\n    this.current = roles.filter((r) => !!this.media.roles.find((ri) => ri == r.id));\r\n  };\r\n\r\n  loadFailed = () => {};\r\n}\r\n","<app-dual-picklist\r\n  class=\"max-height\"\r\n  [available]=\"available\"\r\n  [current]=\"current\"\r\n  (currentChange)=\"currentChanged($event)\"\r\n  [displayField]=\"'name'\"\r\n  [listName]=\"'admin-olc-media.roles' | translate\"\r\n></app-dual-picklist>\r\n"],"names":["RouterModule","MediaComponent","routes","path","component","data","type","pathMatch","MediaRoutingModule","forChild","imports","i1","exports","Location","ActivatedRoute","Router","TranslateService","ToastrService","Subscription","combineLatest","FieldDefinition","MetaDataType","ErrorsService","HydraApiService","Control","SpinnerStateService","i0","ɵɵelementStart","ɵɵelement","ɵɵtwoWayListener","MediaComponent_div_0_Template_app_field_valueChange_8_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","media","name","ɵɵresetView","ɵɵelementEnd","MediaComponent_div_0_Template_app_field_valueChange_10_listener","slug","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵpipeBind1","rightControls","id","dateCreatedUTC","dateModifiedUTC","fieldName","ɵɵtwoWayProperty","fieldSlug","ɵɵtextInterpolate1","constructor","translate","router","hydraApi","route","errorsService","spinner","toastr","location","mediaId","subscriptions","mediaLoaded","m","routeDataType","instant","hide","mediaLoadFailed","error","createFields","Text","label","placeholder","required","onSave","showSavingSpinner","updateOLCMedia","mediaSaved","mediaSaveFailed","duplicateMedia","onCancel","returnToGrid","result","success","showErrorsModal","errors","back","ngOnInit","createButtons","getMediaData","add","params","subscribe","includes","show","document","documentElement","getOLCMedia","saveButton","cancelButton","push","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i2","i3","i4","i5","i6","i7","selectors","decls","vars","consts","template","MediaComponent_Template","rf","ctx","ɵɵtemplate","MediaComponent_div_0_Template","CommonModule","TranslateModule","AutoFocusFirstInputModule","CheckboxModule","FieldsModule","TabBarModule","PageModule","ComponentsModule","PropertiesFormComponent","PropertiesMediaComponent","PropertiesRolesComponent","MediaModule","declarations","Tab","Media","ɵɵlistener","PropertiesFormComponent_div_3_Template_app_properties_media_roleBasedChanged_1_listener","onRoleBasedChanged","translateService","activeTab","tabs","Array","activateTab","tab","roleBasedAccess","splice","inputs","PropertiesFormComponent_Template","PropertiesFormComponent_Template_app_tab_bar_tabSelected_1_listener","PropertiesFormComponent_div_3_Template","PropertiesFormComponent_div_4_Template","EventEmitter","PropertiesMediaComponent_div_0_Template_app_checkbox_valueChange_1_listener","updateRoleBasedAccess","roleBasedChanged","emit","outputs","PropertiesMediaComponent_Template","PropertiesMediaComponent_div_0_Template","roleIdsChange","available","current","currentChanged","items","roles","item","loadPickListItems","getRoles","loaded","loadFailed","filter","r","find","ri","PropertiesRolesComponent_Template","PropertiesRolesComponent_Template_app_dual_picklist_currentChange_0_listener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}