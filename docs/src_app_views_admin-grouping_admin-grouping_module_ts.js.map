{"version":3,"file":"src_app_views_admin-grouping_admin-grouping_module_ts.js","mappings":"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","sources":["./src/app/views/admin-grouping/admin-grouping-routing.module.ts","./src/app/views/admin-grouping/admin-grouping.component.ts","./src/app/views/admin-grouping/admin-grouping.component.html","./src/app/views/admin-grouping/admin-grouping.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGroupingComponent } from './admin-grouping.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'duplicate/:groupingId',\r\n    component: AdminGroupingComponent,\r\n    data: { type: 'duplicate' },\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: AdminGroupingComponent,\r\n    data: { type: 'create' },\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: ':groupingId',\r\n    component: AdminGroupingComponent,\r\n    data: { type: 'properties' },\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminGroupingRoutingModule {}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Data, Params, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NgxSmartModalService } from 'ngx-smart-modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { FieldDefinition, FixedDataSource, IFieldOptions, MetaDataType } from 'shared-code-lib';\r\nimport { Log } from '../../blocks/core/log';\r\nimport { Grouping, IFXEnvironment, IGrouping, Variables } from '../../blocks/models/deployments';\r\nimport { ErrorsService } from '../../blocks/services/errors.service';\r\nimport { HydraApiService } from '../../blocks/services/hydra-api.service';\r\nimport { ApiResult, Control } from '../../blocks/services/models';\r\nimport { SpinnerStateService } from '../../blocks/services/spinner-state.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-grouping',\r\n  templateUrl: './admin-grouping.component.html',\r\n  styleUrls: ['./admin-grouping.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AdminGroupingComponent implements OnInit, OnDestroy {\r\n  rightControls: Array<Control> = [];\r\n\r\n  routeParams: Params;\r\n  routeData: Data;\r\n\r\n  saveButton: Control;\r\n  cancelButton: Control;\r\n  grouping: Grouping;\r\n\r\n  fieldName: FieldDefinition;\r\n  fieldEnvironment: FieldDefinition;\r\n\r\n  subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private hydraApi: HydraApiService,\r\n    private toastr: ToastrService,\r\n    private errorsService: ErrorsService,\r\n    private spinner: SpinnerStateService,\r\n    public ngxSmartModalService: NgxSmartModalService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.add(\r\n      combineLatest([this.route.params, this.route.data]).subscribe(([params, data]) => {\r\n        this.routeParams = params;\r\n        this.routeData = data;\r\n        if (this.routeData.type == 'create') {\r\n          this.grouping = new Grouping({\r\n            name: '',\r\n            variables: new Variables(),\r\n          } as IGrouping);\r\n        } else {\r\n          this.loadItems();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.createButtons();\r\n    this.createFields();\r\n  }\r\n\r\n  private createButtons = () => {\r\n    this.saveButton = new Control(this.onSave, 'Save', 'btn btn-primary btn-minwidth', '', '', 'btn', false);\r\n    this.cancelButton = new Control(this.onCancel, 'Cancel', 'btn btn-light btn-minwidth', '', '', 'btn', false);\r\n    this.rightControls.push(this.saveButton);\r\n    this.rightControls.push(this.cancelButton);\r\n\r\n    this.saveButton.setTranslation(this.translate.instant('Common.Save'));\r\n    this.cancelButton.setTranslation(this.translate.instant('Common.Cancel'));\r\n  };\r\n\r\n  private createFields = () => {\r\n    this.fieldName = new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translate.instant('admin-grouping.name'),\r\n      placeholder: this.translate.instant('admin-grouping.name-placeholder'),\r\n      required: true,\r\n    });\r\n\r\n    this.fieldEnvironment = new FieldDefinition({\r\n      type: MetaDataType.List,\r\n      label: this.translate.instant('admin-grouping.environment'),\r\n      placeholder: this.translate.instant('admin-grouping.environment-placeholder'),\r\n      required: false,\r\n      datasource: new EnvironmentDataSource(this.hydraApi, this.translate),\r\n    });\r\n  };\r\n\r\n  CreateField = (label: string, required: boolean = false): FieldDefinition => {\r\n    return new FieldDefinition({\r\n      type: MetaDataType.Text,\r\n      label: this.translate.instant(label),\r\n      placeholder: this.translate.instant(label),\r\n      required: required,\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    if (this.grouping.id) {\r\n      this.hydraApi.updateGrouping(this.grouping, this.groupingSaved, this.groupingSaveFailed);\r\n    } else {\r\n      this.hydraApi.createGrouping(this.grouping, this.groupingSaved, this.groupingSaveFailed);\r\n    }\r\n\r\n    this.spinner.showSavingSpinner();\r\n  };\r\n\r\n  groupingSaved = (result: ApiResult) => {\r\n    if (result.success) {\r\n      this.toastr.success(this.translate.instant('admin-grouping.saved'));\r\n      this.returnToGrid();\r\n    } else {\r\n      this.errorsService.showErrorsModal(result.errors, 'admin-grouping.validation-errors');\r\n    }\r\n    this.spinner.hide();\r\n  };\r\n\r\n  groupingSaveFailed = (error: any) => {\r\n    this.toastr.error(this.translate.instant('admin-grouping.save-failed'));\r\n    Log.error('admin-grouping.save-failed', error);\r\n    this.spinner.hide();\r\n  };\r\n\r\n  onCancel = () => {\r\n    this.returnToGrid();\r\n  };\r\n\r\n  returnToGrid = () => {\r\n    this.router.navigateByUrl(\r\n      'product/settings/BambaDWFToolsApplication/BambaDWFToolsApplication-Upland.Bamba.DWFTools.IFXReleaseManager.Groupings.Folder'\r\n    );\r\n  };\r\n\r\n  groupingLoaded = (ApiResult: any): void => {\r\n    if (this.routeData.type === 'duplicate') {\r\n      ApiResult.object.name = `${this.translate.instant('Admin.CopyOf')} ${ApiResult.object.name}`;\r\n      ApiResult.object.id = '';\r\n    }\r\n    this.grouping = new Grouping({ ...ApiResult.object });\r\n    this.cdr.markForCheck();\r\n    this.spinner.hide();\r\n  };\r\n\r\n  groupingFailed = (error: any): void => {\r\n    this.toastr.error(this.translate.instant('admin-grouping.load-failed'));\r\n    Log.error('admin-grouping.load-failed', error);\r\n    this.spinner.hide();\r\n  };\r\n\r\n  loadItems = (): void => {\r\n    if (this.routeData.type === 'properties' || this.routeData.type === 'duplicate') {\r\n      this.spinner.show(this.translate.instant('admin-grouping.loading-grouping'), document.body);\r\n      this.hydraApi.getGrouping(this.routeParams.groupingId, this.groupingLoaded, this.groupingFailed);\r\n    }\r\n  };\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n\r\nclass EnvironmentDataSource extends FixedDataSource {\r\n  constructor(private hydraApiService: HydraApiService, private translateService: TranslateService) {\r\n    super();\r\n  }\r\n\r\n  successCallBack: (items: IFieldOptions[]) => void;\r\n  failureCallBack: (err: any) => void;\r\n\r\n  getItems(\r\n    startsWith: string,\r\n    currentValue: string,\r\n    successCallBack: (items: IFieldOptions[]) => void,\r\n    failureCallBack: (err: any) => void\r\n  ): void {\r\n    this.successCallBack = successCallBack;\r\n    this.failureCallBack = failureCallBack;\r\n\r\n    this.hydraApiService.getIFXEnvironments(this.groupingsLoaded, this.failed);\r\n  }\r\n\r\n  groupingsLoaded = (result: ApiResult): void => {\r\n    if (!result.success) return;\r\n\r\n    const options = new Array<IFieldOptions>();\r\n    result.object.forEach((ifxEnvironment: IFXEnvironment) => {\r\n      options.push({ name: ifxEnvironment.name, value: ifxEnvironment.id });\r\n    });\r\n\r\n    this.successCallBack(options);\r\n  };\r\n\r\n  failed = (err): void => {\r\n    this.failureCallBack(err);\r\n  };\r\n}\r\n","<div class=\"admin-grouping project-list-dashboard-body d-flex flex-column container-fluid\" appAutoFocusFirstInput>\r\n  <app-secondary-header [headerText]=\"'admin-grouping.header-text' | translate\" [rightControls]=\"rightControls\">\r\n  </app-secondary-header>\r\n\r\n  <div class=\"container-fluid col h-100\" id=\"spinnerPanel\">\r\n    <div *ngIf=\"grouping\" class=\"panel row m-0\">\r\n      <div\r\n        class=\"col-12 col-md-3 properties-panel properties-panel-h\"\r\n        fxFlex=\"auto\"\r\n        [perfectScrollbar]=\"{ suppressScrollY: false }\"\r\n        #sideScroll=\"ngxPerfectScrollbar\"\r\n        [autoUpdatePerfectScroll]=\"sideScroll\"\r\n        appAutoFocusFirstInput\r\n      >\r\n        <app-created-modified\r\n          [id]=\"grouping.id\"\r\n          [createdDate]=\"grouping.dateCreatedUTC\"\r\n          [modifiedDate]=\"grouping.dateModifiedUTC\"\r\n        ></app-created-modified>\r\n        <div class=\"row\">\r\n          <div class=\"col\"><app-field [field]=\"fieldName\" [(value)]=\"grouping.name\"></app-field></div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\"><app-field [field]=\"fieldEnvironment\" [(value)]=\"grouping.environmentId\"></app-field></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"col-12 col-md-9 panel p-0 border-bottom-0 d-flex flex-column tab-h\"\r\n        fxFlex=\"auto\"\r\n        [perfectScrollbar]=\"{ suppressScrollY: false }\"\r\n        #tabScroll=\"ngxPerfectScrollbar\"\r\n        [autoUpdatePerfectScroll]=\"tabScroll\"\r\n      >\r\n        <div class=\"panel-wrapper vcenter\">\r\n          <div class=\"col panel-header\">\r\n            {{ 'admin-grouping.variables' | translate }}\r\n          </div>\r\n        </div>\r\n        <app-variable-list [variables]=\"grouping.variables\"></app-variable-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar-portable';\r\n\r\nimport { AdminGroupingRoutingModule } from './admin-grouping-routing.module';\r\nimport { PageModule } from '../../blocks/page/page.module';\r\nimport { ComponentsModule } from '../../blocks/components/components.module';\r\nimport { AdminGroupingComponent } from './admin-grouping.component';\r\nimport {\r\n  AutoFocusFirstInputModule,\r\n  AutoUpdatePerfectScrollModule,\r\n  CheckboxModule,\r\n  FieldsModule,\r\n} from 'shared-code-lib';\r\n\r\n@NgModule({\r\n  declarations: [AdminGroupingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminGroupingRoutingModule,\r\n    TranslateModule,\r\n    PageModule,\r\n    ComponentsModule,\r\n    FieldsModule,\r\n    AutoFocusFirstInputModule,\r\n    CheckboxModule,\r\n    NgxSmartModalModule,\r\n    PerfectScrollbarModule,\r\n    AutoUpdatePerfectScrollModule,\r\n  ],\r\n})\r\nexport class AdminGroupingModule {}\r\n"],"names":["RouterModule","AdminGroupingComponent","routes","path","component","data","type","pathMatch","AdminGroupingRoutingModule","forChild","imports","i1","exports","ChangeDetectorRef","ActivatedRoute","Router","TranslateService","NgxSmartModalService","ToastrService","Subscription","combineLatest","FieldDefinition","FixedDataSource","MetaDataType","Log","Grouping","Variables","ErrorsService","HydraApiService","Control","SpinnerStateService","i0","ɵɵelementStart","ɵɵelement","ɵɵtwoWayListener","AdminGroupingComponent_div_4_Template_app_field_valueChange_6_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","grouping","name","ɵɵresetView","ɵɵelementEnd","AdminGroupingComponent_div_4_Template_app_field_valueChange_9_listener","environmentId","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","sideScroll_r3","id","dateCreatedUTC","dateModifiedUTC","fieldName","ɵɵtwoWayProperty","fieldEnvironment","tabScroll_r4","ɵɵtextInterpolate1","ɵɵpipeBind1","variables","constructor","translate","router","route","hydraApi","toastr","errorsService","spinner","ngxSmartModalService","cdr","rightControls","subscriptions","createButtons","saveButton","onSave","cancelButton","onCancel","push","setTranslation","instant","createFields","Text","label","placeholder","required","List","datasource","EnvironmentDataSource","CreateField","updateGrouping","groupingSaved","groupingSaveFailed","createGrouping","showSavingSpinner","result","success","returnToGrid","showErrorsModal","errors","hide","error","navigateByUrl","groupingLoaded","ApiResult","routeData","object","markForCheck","groupingFailed","loadItems","show","document","body","getGrouping","routeParams","groupingId","ngOnInit","add","params","subscribe","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i2","i3","i4","i5","i6","i7","selectors","decls","vars","consts","template","AdminGroupingComponent_Template","rf","ctx","ɵɵtemplate","AdminGroupingComponent_div_4_Template","hydraApiService","translateService","groupingsLoaded","options","Array","forEach","ifxEnvironment","value","successCallBack","failed","err","failureCallBack","getItems","startsWith","currentValue","getIFXEnvironments","CommonModule","TranslateModule","NgxSmartModalModule","PerfectScrollbarModule","PageModule","ComponentsModule","AutoFocusFirstInputModule","AutoUpdatePerfectScrollModule","CheckboxModule","FieldsModule","AdminGroupingModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}