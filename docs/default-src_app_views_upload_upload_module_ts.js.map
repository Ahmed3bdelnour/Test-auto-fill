{"version":3,"file":"default-src_app_views_upload_upload_module_ts.js","mappings":"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","sources":["./src/app/views/upload/upload-form/upload-form.component.ts","./src/app/views/upload/upload-form/upload-form.component.html","./src/app/views/upload/upload-form/upload-form.module.ts","./src/app/views/upload/upload-routing.module.ts","./src/app/views/upload/upload.component.ts","./src/app/views/upload/upload.component.html","./src/app/views/upload/upload.module.ts"],"sourcesContent":["import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UserStateService } from '../../../blocks/services/user-state.service';\r\nimport { UploadForm } from '../upload.component';\r\n\r\n@Component({\r\n  selector: 'app-upload-form',\r\n  templateUrl: './upload-form.component.html',\r\n  styleUrls: ['./upload-form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class UploadFormComponent implements OnInit {\r\n  @Input() formData: UploadForm;\r\n  @Input() validateForm;\r\n\r\n  supportedFiles: string;\r\n  uploadSubscription: any;\r\n\r\n  constructor(private userState: UserStateService) {}\r\n\r\n  ngOnInit() {\r\n    this.supportedFiles = 'PDF, DOC, DOCX, TIF, XLS, XLSX, HTM, HTML, MHT, GIF, PNG, JPG, JPEG, RTF, BMP, ZIP';\r\n\r\n    if (this.userState.getUser()) {\r\n      this.formData.owner = [this.userState.getUser().name];\r\n    }\r\n    // todo: how to let the service know that the file has been pushed or pop\r\n\r\n    // todo: how to make the tags to refresh when the quantity from the server has change\r\n  }\r\n\r\n  onItemAdded(chip: any, field: string) {\r\n    this.formData[field].push(chip);\r\n    this.validateForm();\r\n  }\r\n\r\n  onItemRemoved(chip: any, field: string) {\r\n    this.formData[field] = this.formData[field].filter((chipItem) => chipItem !== chip);\r\n    this.validateForm();\r\n  }\r\n\r\n  fieldChange(value: string, field: string) {\r\n    this.formData[field] = value;\r\n    this.validateForm();\r\n  }\r\n}\r\n","<div class=\"upload-form\">\r\n  <!-- <ul class=\"text-fields-state\"> -->\r\n  <div class=\"column-1\">\r\n    <ul>\r\n      <li>\r\n        <app-label [localize]=\"true\" [required]=\"true\" [text]=\"'Upload-Form.Owner'\"></app-label>\r\n        <!-- <input type=\"text\" name=\"owner\" placeholder=\"Name\"> -->\r\n        <div class=\"form-control\">\r\n          <tag-input\r\n            [ngModel]=\"formData.owner\"\r\n            [maxItems]=\"1\"\r\n            [separatorKeyCodes]=\"[32]\"\r\n            (onRemove)=\"onItemRemoved($event, 'owner')\"\r\n            (onAdd)=\"onItemAdded($event, 'owner')\"\r\n          ></tag-input>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <label>{{ 'Upload-Form.Subject' | translate }}</label>\r\n        <input\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n          name=\"subject\"\r\n          [ngModel]=\"formData.subject\"\r\n          (ngModelChange)=\"fieldChange($event, 'subject')\"\r\n          [placeholder]=\"'Upload-Form.EnterTextHere' | translate\"\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"column-2\">\r\n    <ul>\r\n      <li>\r\n        <label>{{ 'Upload-Form.UniqueReference' | translate }}</label>\r\n        <input\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n          name=\"unique-reference\"\r\n          [ngModel]=\"formData.uniqueReference\"\r\n          (ngModelChange)=\"fieldChange($event, 'uniqueReference')\"\r\n          [placeholder]=\"'Upload-Form.EnterTextHere' | translate\"\r\n        />\r\n      </li>\r\n      <li>\r\n        <label>{{ 'Upload-Form.PrivateTag' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <tag-input\r\n            [ngModel]=\"formData.privateTags\"\r\n            [separatorKeyCodes]=\"[32]\"\r\n            [secondaryPlaceholder]=\"'Upload-Form.EnterTags' | translate\"\r\n            (onRemove)=\"onItemRemoved($event, 'privateTags')\"\r\n            (onAdd)=\"onItemAdded($event, 'privateTags')\"\r\n          ></tag-input>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div\r\n    appFileUpload\r\n    class=\"column-3\"\r\n    [formData]=\"formData\"\r\n    [field]=\"'attachedItems'\"\r\n    [validateForm]=\"validateForm\"\r\n    [supportedFiles]=\"supportedFiles\"\r\n    [isRequired]=\"true\"\r\n    [uploadControlLabel]=\"'Upload-Form.AddFileUpload'\"\r\n  ></div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UploadFormComponent } from './upload-form.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport { DirectivesModule } from '../../../blocks/directives/directives.module';\r\nimport { ComponentsModule } from '../../../blocks/components/components.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LabelModule } from 'shared-code-lib';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    TagInputModule,\r\n    TranslateModule,\r\n    DirectivesModule,\r\n    ComponentsModule,\r\n    LabelModule,\r\n  ],\r\n  declarations: [UploadFormComponent],\r\n  exports: [UploadFormComponent],\r\n})\r\nexport class UploadFormModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UploadComponent } from './upload.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'bamba-upload',\r\n    component: UploadComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'api/downloaddocument',\r\n    component: UploadComponent,\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UploadRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ContentPostService } from '../../blocks/services/content-post.service';\r\nimport { Control, Dictionary } from '../../blocks/services/models';\r\n\r\nexport interface IUploadForm {\r\n  owner: string[];\r\n  privateTags: string[];\r\n  uniqueReference: string;\r\n  subject: string;\r\n  customProperties: string[];\r\n  attachedItems: any[];\r\n}\r\n\r\nexport class UploadForm implements IUploadForm {\r\n  owner: string[] = [];\r\n  privateTags: string[] = [];\r\n  uniqueReference = '';\r\n  subject = '';\r\n  customProperties: string[] = [];\r\n  attachedItems: any[] = [];\r\n  constructor(item) {\r\n    this.owner = item.owner ? item.owner : this.owner;\r\n    this.privateTags = item.privateTags ? item.privateTags : this.privateTags;\r\n    this.uniqueReference = item.uniqueReference ? item.uniqueReference : this.uniqueReference;\r\n    this.subject = item.subject ? item.subject : this.subject;\r\n    this.customProperties = item.customProperties ? item.customProperties : this.customProperties;\r\n    this.attachedItems = item.attachedItems ? item.attachedItems : this.attachedItems;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n})\r\nexport class UploadComponent implements OnInit {\r\n  uploadData: UploadForm = new UploadForm({});\r\n\r\n  constructor(\r\n    private contentPostService: ContentPostService,\r\n    private translate: TranslateService,\r\n    private router: Router\r\n  ) {}\r\n  breadCrumbs: Array<Dictionary> = [];\r\n  rightControls: Array<Control> = [];\r\n  // uploadLabel: Dictionary = new Dictionary('Upload', '');\r\n  // cancelLabel: Dictionary = new Dictionary('Cancel', '');\r\n  uploadForm = new UploadForm({});\r\n  saveButton: Control;\r\n  cancelButton: Control;\r\n  homeLabel: Dictionary = new Dictionary('Home', '/');\r\n\r\n  ngOnInit() {\r\n    this.saveButton = new Control(this.saveDocuments, 'Upload', 'btn btn-primary', '', 'Upload', 'btn', true);\r\n    this.cancelButton = new Control(this.cancel, 'Cancel', 'btn btn-light', '', 'Cancel', 'btn', false);\r\n\r\n    this.rightControls.push(this.saveButton);\r\n    this.rightControls.push(this.cancelButton);\r\n\r\n    this.saveButton.setTranslation(this.translate.instant('Upload.Upload'));\r\n    this.cancelButton.setTranslation(this.translate.instant('Upload.Cancel'));\r\n    this.homeLabel.updateKey(this.translate.instant('Home'));\r\n  }\r\n\r\n  saveDocuments = () => {\r\n    const element = document.querySelector('.upload-form') as HTMLElement;\r\n    this.contentPostService.uploadFile(element, this.uploadForm);\r\n  };\r\n\r\n  cancel = () => {\r\n    //todo: confirm if there are changes\r\n\r\n    this.router.navigateByUrl('home');\r\n  };\r\n\r\n  validateForm = () => {};\r\n}\r\n","<app-secondary-header\r\n  [headerText]=\"'Upload.HeadText' | translate\"\r\n  [breadCrumbs]=\"breadCrumbs\"\r\n  [rightControls]=\"rightControls\"\r\n></app-secondary-header>\r\n\r\n<div class=\"upload project-list-dashboard-body\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"project-list-grid-panel\" id=\"spinnerPanel\">\r\n      <app-upload-form [validateForm]=\"validateForm\" [formData]=\"uploadForm\"></app-upload-form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UploadComponent } from './upload.component';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { BoxModule } from '../../blocks/box/box.module';\r\nimport { UploadFormModule } from './upload-form/upload-form.module';\r\nimport { PageModule } from '../../blocks/page/page.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { UploadRoutingModule } from './upload-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PageModule,\r\n    BoxModule,\r\n    UploadFormModule,\r\n    TranslateModule,\r\n    NgxFileDropModule,\r\n    UploadRoutingModule,\r\n  ],\r\n  declarations: [UploadComponent],\r\n})\r\nexport class UploadModule {}\r\n"],"names":["UserStateService","UploadForm","UploadFormComponent","constructor","userState","ngOnInit","supportedFiles","getUser","formData","owner","name","onItemAdded","chip","field","push","validateForm","onItemRemoved","filter","chipItem","fieldChange","value","i0","ɵɵdirectiveInject","i1","selectors","inputs","decls","vars","consts","template","UploadFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵlistener","UploadFormComponent_Template_tag_input_onRemove_6_listener","$event","UploadFormComponent_Template_tag_input_onAdd_6_listener","ɵɵelementEnd","ɵɵtext","UploadFormComponent_Template_input_ngModelChange_11_listener","UploadFormComponent_Template_input_ngModelChange_19_listener","UploadFormComponent_Template_tag_input_onRemove_26_listener","UploadFormComponent_Template_tag_input_onAdd_26_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵtextInterpolate","ɵɵpipeBind1","subject","uniqueReference","privateTags","CommonModule","FormsModule","TagInputModule","DirectivesModule","ComponentsModule","TranslateModule","LabelModule","UploadFormModule","declarations","imports","exports","RouterModule","UploadComponent","routes","path","component","pathMatch","UploadRoutingModule","forChild","Router","TranslateService","ContentPostService","Control","Dictionary","item","customProperties","attachedItems","contentPostService","translate","router","uploadData","breadCrumbs","rightControls","uploadForm","homeLabel","saveDocuments","element","document","querySelector","uploadFile","cancel","navigateByUrl","saveButton","cancelButton","setTranslation","instant","updateKey","i2","i3","UploadComponent_Template","NgxFileDropModule","BoxModule","PageModule","UploadModule","SecondaryHeaderComponent","TranslatePipe"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}